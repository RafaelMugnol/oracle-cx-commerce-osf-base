/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React from 'react';
import PropTypes from 'prop-types';

/**
 * Translates a dynamic property object in into a UI element
 * ** Mocked for now to allow JS API testing
 * ** Rich text to be implemented when UI stories start
 */
const DynamicProperty = props => {
  const {label, required, id, value, uiEditorType} = props;

  let inputType = '';

  switch (uiEditorType) {
    case ('shortText', 'richText'):
      inputType = 'text';
      break;
    case 'number':
      inputType = 'number';
      break;
    case 'date':
      inputType = 'date';
      break;
    case 'checkbox':
      inputType = 'checkbox';
      break;
    default:
      inputType = 'text';
      break;
  }

  if (inputType === 'checkbox') {
    return (
      <div className="DynamicProperty__CheckBox">
        <input type="checkbox" id={id} name={id} defaultValue="false" aria-label={label} />
        <label htmlFor={id}>{label}</label>
      </div>
    );
  }

  return (
    <React.Fragment>
      <label htmlFor={id}>
        {label}
        {required ? '*' : ''}
      </label>
      <input
        className="DynamicProperty__Input"
        type={inputType}
        id={id}
        name={id}
        placeholder={label}
        defaultValue={value}
        required={required}
      />
      <span className="validationMessage"></span>
    </React.Fragment>
  );
};

DynamicProperty.propTypes = {
  /**
   * Label of the dynamic property
   */
  label: PropTypes.string.isRequired,

  /**
   *  Whether it is mandatory to provide this specific property or not.
   */
  required: PropTypes.bool.isRequired,

  /**
   * ID of the element
   */
  id: PropTypes.string.isRequired,

  /**
   * Default value
   */
  value: PropTypes.string.isRequired,

  /**
   * Type of the ui Editor. For eg, number, date, checkbox.
   */
  uiEditorType: PropTypes.string.isRequired
};

export default DynamicProperty;
