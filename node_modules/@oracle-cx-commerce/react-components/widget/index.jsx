/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {Suspense, useContext} from 'react';
import {ComponentsContext} from '@oracle-cx-commerce/react-ui/contexts';
import {connect} from '@oracle-cx-commerce/react-components/provider';
import {getWidget} from '@oracle-cx-commerce/commerce-utils/selector';

const lazy = React.lazy().$$typeof;

const Missing = props => <div>Missing Component - {props.componentId}</div>;

const getComponent = (props, components) => components[props.componentId] || Missing;

const withCSSOverride = Component => props =>
  (
    <div className={props.cssOverride}>
      <Component {...props} />
    </div>
  );

const Widget = props => {
  const components = useContext(ComponentsContext);

  const OriginalComponent = getComponent(props, components);

  const Component = props.cssOverride ? withCSSOverride(OriginalComponent) : OriginalComponent;

  // React.lazy() components must be wrapped in a Suspense fallback
  if (OriginalComponent.$$typeof === lazy) {
    return (
      <Suspense fallback={null}>
        <Component {...props} />
      </Suspense>
    );
  }

  return <Component {...props} />;
};

export default connect(getWidget)(Widget);
