/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {useEffect, useRef} from 'react';
import ReactDOM from 'react-dom';
import css from '@oracle-cx-commerce/react-components/portal/styles.css';
import Styled from '@oracle-cx-commerce/react-components/styled';

export default function Portal({children, disableBodyScroll = false}) {
  // set up a ref to the node the portal wil be inserted in to
  const el = useRef(null);

  /**
   * if the disableBodyScroll flag is true disable body scrolling else do nothing
   */
  useEffect(() => {
    if (!disableBodyScroll) {
      return;
    }

    // on mount save copy of the current style then update the style
    const originalStyle = window.getComputedStyle(document.body).overflow;
    document.body.style.overflow = 'hidden';

    return () => {
      // on un-mount reset the style
      document.body.style.overflow = originalStyle;
    };
  }, [disableBodyScroll]);

  /**
   * Set up the portal
   */
  useEffect(() => {
    el.current = document.createElement('div');
    const portalDOM = document.querySelector('#portal');
    portalDOM && portalDOM.append(el.current);

    return () => {
      portalDOM && portalDOM.removeChild(el.current);
    };
  }, []);

  return el.current
    ? ReactDOM.createPortal(
        <Styled id="Portal" css={css}>
          {children}
        </Styled>,
        el.current
      )
    : null;
}
