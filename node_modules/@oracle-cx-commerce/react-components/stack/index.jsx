/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {Suspense, useContext} from 'react';
import {ComponentsContext} from '@oracle-cx-commerce/react-ui/contexts';
import {connect} from '@oracle-cx-commerce/react-components/provider';
import {getStack} from '@oracle-cx-commerce/commerce-utils/selector';

const lazy = React.lazy().$$typeof;

const Missing = props => <div>Missing Stack - {props.stackId}</div>;

export const stack = WrappedComponent => connect(getStack)(WrappedComponent);

const Stack = props => {
  const stacks = useContext(ComponentsContext);
  const Component = stacks[props.stackId] || Missing;

  if (Component.$$typeof !== lazy) {
    return <Component {...props} />;
  }

  return (
    <Suspense fallback={null}>
      <Component {...props} />
    </Suspense>
  );
};

export default stack(Stack);
