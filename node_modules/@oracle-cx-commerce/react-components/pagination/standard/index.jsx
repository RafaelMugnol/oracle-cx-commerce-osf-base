/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React from 'react';
import {noop} from '@oracle-cx-commerce/utils/generic';
import {PAGINATION_PARAM_OFFSET} from '@oracle-cx-commerce/commerce-utils/constants/page-links';
import PageIndicator from '@oracle-cx-commerce/react-components/pagination/page-indicator';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-components/pagination/standard/styles.css';

/**
 * A React component to display "standard" pagination UI. Includes numeric pagination.
 *
 * @param {Object} props Pagination props
 */
const StandardPagination = ({
  currentOffset = 0,
  limit = 16,
  totalRecords = 0,
  pageId = '',
  offsetParam = PAGINATION_PARAM_OFFSET,
  pageParam,
  onPageChange = noop,
  className = '',
  pagesToShowBesideCurrentPage = 1
}) => {
  const currentPage = Math.ceil(currentOffset / limit) + 1,
    totalPages = Math.ceil(totalRecords / limit);

  const pages = [];

  let isEllipsisAdded = false;

  for (let i = 1; i <= totalPages; i++) {
    const toShowPage =
      i === 1 || i === totalPages || i === currentPage || Math.abs(i - currentPage) <= pagesToShowBesideCurrentPage;

    if (toShowPage) {
      const page = (
        <PageIndicator
          key={i}
          pageNumber={i}
          limit={limit}
          pageId={pageId}
          offsetParam={offsetParam}
          pageParam={pageParam}
          onPageChange={onPageChange}
          label={i}
          className={`StandardPagination__PageIndicator ${
            i === currentPage ? 'StandardPagination__PageIndicator--active' : ''
          }`}
        />
      );

      pages.push(page);
      isEllipsisAdded = false;
    } else if (!isEllipsisAdded) {
      pages.push(<span key={i} className="StandardPagination__PageIndicatorDots"></span>);
      isEllipsisAdded = true;
    }
  }

  return (
    <Styled id="StandardPagination" css={css}>
      <div className={`StandardPagination ${className}`}>{pages}</div>
    </Styled>
  );
};

export default StandardPagination;
