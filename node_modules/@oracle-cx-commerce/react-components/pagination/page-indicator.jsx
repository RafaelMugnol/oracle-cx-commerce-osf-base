/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React from 'react';
import Link from '@oracle-cx-commerce/react-components/link';

/**
 * A component to render an anchor tag leading to specified page of data.
 *
 * @param {Object} props
 */
const PageIndicatorLink = ({pageNumber, limit, pageId, pageParam, offsetParam, label, className}) => {
  const url = new URL(pageId, 'http://localhost');

  if (pageParam) {
    url.searchParams.set(pageParam, pageNumber);
  } else if (offsetParam) {
    url.searchParams.set(offsetParam, (pageNumber - 1) * limit);
  }

  return (
    <Link className={className} href={url.pathname.substring(1) + url.search}>
      {label}
    </Link>
  );
};

/**
 * A component to render a button that calls the passed `onPageChange` handler with
 * new page offset.
 *
 * @param {Object} props
 */
const PageIndicatorButton = ({pageNumber, limit, onPageChange, label, className}) => {
  const newOffset = (pageNumber - 1) * limit;

  return (
    <button
      type="button"
      className={className}
      onClick={ev => {
        onPageChange(newOffset, pageNumber, limit, ev);
      }}
      aria-label={label}
    >
      {label}
    </button>
  );
};

/**
 * A component that displays UI to navigate to a single page. Whether it will be a
 * URL driven pagination, or a component driven pagination, is determined by the
 * `pageId` prop. Falls back to component driven pagination in absence of
 * the `pageId` prop. If URL pagination is used, paging is done by page number if
 * `pageParam` is specified, otherwise paging is done by offset.
 *
 * @param {Object} props
 */
const PageIndicator = props => {
  const {pageId} = props;

  return pageId ? <PageIndicatorLink {...props} /> : <PageIndicatorButton {...props} />;
};

export default PageIndicator;
