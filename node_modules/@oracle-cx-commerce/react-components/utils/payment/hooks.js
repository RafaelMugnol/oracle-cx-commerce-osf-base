/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {useContext, useEffect, useState} from 'react';
import {StoreContext} from '@oracle-cx-commerce/react-ui/contexts';
import {getCurrentProfile, getCurrentOrder, getOrder, getPage} from '@oracle-cx-commerce/commerce-utils/selector';

/**
 * This is a custom hook which returns whether approval is required by order or not.
 * @returns {object} object.
 */
export const useOrderApprovalRequired = () => {
  const [orderApproval, setOrderApproval] = useState({});
  const store = useContext(StoreContext);
  const state = store.getState();
  const {action} = store;
  const contextOrderId = getPage(state).contextId;
  const currentOrder = contextOrderId ? getOrder(state, {id: contextOrderId}) : getCurrentOrder(state);

  const {id: currentOrderId} = currentOrder;
  const isApprovalEnabled = getCurrentProfile(state).derivedApprovalRequired;

  useEffect(() => {
    (async () => {
      if (isApprovalEnabled && currentOrderId) {
        const response = await action('checkOrderRequiresApproval', {
          orderId: currentOrderId
        });
        if (response.ok) {
          if (response.json) {
            setOrderApproval(response.json);
          }
        }
      }
    })();
  }, [action, isApprovalEnabled, currentOrderId]);

  return orderApproval;
};
