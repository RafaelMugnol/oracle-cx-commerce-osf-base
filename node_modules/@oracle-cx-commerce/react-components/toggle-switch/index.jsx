/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-components/toggle-switch/styles.css';
import {noop} from '@oracle-cx-commerce/utils/generic';
import PropTypes from 'prop-types';

// eslint-disable-next-line spellcheck/spell-checker
/**
 * Renders HTML toggle switch component.
 */

const ToggleSwitch = props => {
  const {isOn = false, onChange = noop, id, 'data-testid': dataTestId = '', label = '', ...elementAttributes} = props;
  delete elementAttributes.type;
  delete elementAttributes.checked;

  return (
    <Styled css={css} id="ToggleSwitch">
      <label htmlFor={id} className="ToggleSwitch">
        <input type="hidden" id={`${id}-hidden`} {...elementAttributes} checked={!isOn} readOnly />
        <input
          type="checkbox"
          id={id}
          {...elementAttributes}
          data-testid={dataTestId}
          onChange={onChange}
          aria-label={label}
          checked={isOn}
        />

        <span className="ToggleSwitch__Slider"></span>
      </label>
    </Styled>
  );
};

ToggleSwitch.propTypes = {
  /**
   * ID of switch input element.
   */
  id: PropTypes.string,

  /**
   *  data-test-id of switch input element which is used to identify element in test cases.
   */
  'data-testid': PropTypes.string,
  /**
   * Label of the switch input element.
   */
  label: PropTypes.string.isRequired,
  /**
   * Function callback to be invoked on Change event.
   */
  onChange: PropTypes.func,
  /**
   * Used to set the checked property of switch input element to indicate whether switch is ON/OFF.
   */
  isOn: PropTypes.bool.isRequired
};

ToggleSwitch.defaultProps = {
  onChange: noop,
  id: undefined,
  'data-testid': ''
};

export default React.memo(ToggleSwitch);
