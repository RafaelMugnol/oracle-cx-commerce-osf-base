/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {
  useHeadUpdater,
  useSocialMetaUpdater,
  useLayoutShiftObserver,
  useLazyFooter,
  useCanonicalTagUpdater
} from '@oracle-cx-commerce/react-components/page/hooks';

import React, {useRef} from 'react';
import Region from '@oracle-cx-commerce/react-components/region';
import Styled from '@oracle-cx-commerce/react-components/styled';
import {connect} from '@oracle-cx-commerce/react-components/provider';
import css from '@oracle-cx-commerce/react-components/page/styles.css';
import {getPage} from '@oracle-cx-commerce/commerce-utils/selector';
import PropTypes from 'prop-types';

export const page = WrappedComponent => connect(getPage)(WrappedComponent);

const Page = props => {
  const {header = [], main = [], footer = [], pageType} = props;
  const lazyFooterRef = useRef(null);
  const visitedPageTypesRef = useRef([]);

  useHeadUpdater(props);
  useSocialMetaUpdater();
  useLazyFooter(visitedPageTypesRef, lazyFooterRef, pageType);
  useLayoutShiftObserver();
  useCanonicalTagUpdater();

  return (
    <React.Fragment>
      <Styled css={css} id="Page">
        {header.length > 0 && (
          <header>
            {header.map((regionId, index) => (
              /*
              Using region ids as keys causes unnecessary DOM reconciliation.
              
              https://reactjs.org/docs/reconciliation.html#keys
            */
              <Region key={index} regionId={regionId} /> // eslint-disable-line react/no-array-index-key
            ))}
          </header>
        )}
        {main.length > 0 && (
          <main>
            {main.map((regionId, index) => (
              /*
              Using region ids as keys causes unnecessary DOM reconciliation.
              
              https://reactjs.org/docs/reconciliation.html#keys
            */
              <Region key={index} regionId={regionId} /> // eslint-disable-line react/no-array-index-key
            ))}
          </main>
        )}
        {footer.length > 0 && (
          <footer ref={lazyFooterRef}>
            {footer.map((regionId, index) => (
              /*
              Using region ids as keys causes unnecessary DOM reconciliation.
              
              https://reactjs.org/docs/reconciliation.html#keys
            */
              <Region key={index} regionId={regionId} /> // eslint-disable-line react/no-array-index-key
            ))}
          </footer>
        )}
      </Styled>
    </React.Fragment>
  );
};

Page.propTypes = {
  /**
   * Information related to components in the page header
   */
  header: PropTypes.arrayOf(PropTypes.string),

  /**
   * information related to components in the page main section
   */
  main: PropTypes.arrayOf(PropTypes.string),

  /**
   * Information related to components in the page main section
   */
  footer: PropTypes.arrayOf(PropTypes.string),

  /**
   * Page type
   */
  pageType: PropTypes.string.isRequired
};

Page.defaultProps = {
  header: [],
  main: [],
  footer: []
};

export default page(Page);
