/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

const {resolveBoolean} = require('@oracle-cx-commerce/tools-util');
// Cache reference to process.env.
const {env} = process;

/**
 * map an environment variable available on live/preview controllers
 * to expected key values that may be available in the app's app-config
 */
const OCC_APP_CONTEXT_MAP = {
  DEV: 'development',
  TST: 'test',
  PRD: 'production'
};

const methods = JSON.parse(
  JSON.stringify({
    production: env.NODE_ENV === 'production',
    appName: env.OCC_APP_NAME,
    appKey: env.OCC_APP_KEY,
    appServer: env.OCC_APP_SERVER,
    appServerAdmin: env.OCC_APP_SERVER_ADMIN,
    httpHost: env.OCC_HTTP_HOST,
    httpPort: env.OCC_HTTP_PORT,
    httpsHost: env.OCC_HTTPS_HOST,
    httpsPort: env.OCC_HTTPS_PORT,
    sslKey: env.OCC_SSL_KEY,
    sslCert: env.OCC_SSL_CERT,
    serverEnv: env.OCC_SERVER_ENV,
    dsAssetMode: env.OCC_DS_ASSET_MODE,
    previewContext: env.OCC_PREVIEW_CONTEXT,
    baseURI: env.OCC_BASE_URI,
    live: resolveBoolean(env.OCC_LIVE),
    verbose: resolveBoolean(env.OCC_VERBOSE),
    skipProxy: resolveBoolean(env.OCC_SKIP_PROXY),
    cacheEnabled: resolveBoolean(env.OCC_CACHE_ENABLED),
    userName: env.OCC_WORKSPACE_USERNAME,
    appContext: env.OCC_APP_CONTEXT || OCC_APP_CONTEXT_MAP[env.ENV_TYPE],
    backup: resolveBoolean(env.OCC_BACKUP)
  })
);

// Server configuration.
module.exports = methods;
