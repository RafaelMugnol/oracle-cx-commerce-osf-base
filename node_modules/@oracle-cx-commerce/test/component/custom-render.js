/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {Suspense} from 'react';
import {render} from '@testing-library/react';
import {ComponentsContext} from '@oracle-cx-commerce/react-ui/contexts';
import Provider from '@oracle-cx-commerce/react-components/provider';
import * as widgetComps from '@oracle-cx-commerce/react-widgets';

const customRender = (component, store, components = widgetComps, options) => {
  const WrappedInProviders = ({children}) => {
    return (
      <Suspense fallback={null}>
        <ComponentsContext.Provider value={components}>
          <Provider store={store}>{children}</Provider>
        </ComponentsContext.Provider>
      </Suspense>
    );
  };

  const rendered = render(component, {wrapper: WrappedInProviders, ...options});

  return {
    ...rendered,
    rerender: (comp, store, components = widgetComps, options) =>
      customRender(comp, store, components, {container: rendered.container, ...options})
  };
};

// re-export everything
export * from '@testing-library/react';

// override render method
export {customRender as render};
