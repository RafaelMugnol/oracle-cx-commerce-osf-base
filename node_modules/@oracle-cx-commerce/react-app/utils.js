/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {
  getGlobalContext,
  getVisitId,
  getVisitorId,
  getVisitorServiceConfiguration,
  getSite
} from '@oracle-cx-commerce/commerce-utils/selector';

import {importScript} from '@oracle-cx-commerce/utils/browser';

export const saveVisitDetails = (store, visitorId, visitId) => {
  const state = store.getState();
  const oldVisitorId = getVisitorId(state);
  const oldVisitId = getVisitId(state);

  if (oldVisitorId !== visitorId || oldVisitId !== visitId) {
    store.action('saveVisitsAndVisitorsMetric', {
      visitorId,
      visitId
    });
  }
};
export const loadVisitorService = store => {
  const state = store.getState();

  const {tenantId, visitorServiceHost, oracleUnifiedVisitJsUrl} = getVisitorServiceConfiguration(state);

  if (oracleUnifiedVisitJsUrl) {
    const {site} = getGlobalContext(state);
    const {cartSharingId} = getSite(state);

    window.OracleUnifiedVisit = {
      accountId: `${tenantId}_${site}`,
      host: visitorServiceHost,
      handle() {
        if (window.OCCExp && window.OCCExp.setVisitIDs) {
          window.OCCExp.setVisitIDs();
        }
        saveVisitDetails(store, window.OracleUnifiedVisit.visitorId(), window.OracleUnifiedVisit.visitId());
        store.dispatch({
          type: 'updateState',
          delta: {
            clientRepository: {
              context: {
                global: {
                  visitId: window.OracleUnifiedVisit.visitId(),
                  visitorId: window.OracleUnifiedVisit.visitorId()
                }
              }
            }
          }
        });
      },
      handleVisitor(cookieName, cookieDomain) {
        //Sends request to update visitor information to cc server for all ITP browsers.
        const userAgent = navigator.userAgent.toLowerCase();
        const isSafariOrIPhoneIpadIPod =
          (userAgent.indexOf('safari') > -1 &&
            userAgent.indexOf('chrome') === -1 &&
            userAgent.indexOf('iemobile') === -1) ||
          ((userAgent.indexOf('iphone') > -1 || userAgent.indexOf('ipad') > -1 || userAgent.indexOf('ipod') > -1) &&
            userAgent.indexOf('iemobile') === -1);
        if (isSafariOrIPhoneIpadIPod) {
          store.action('updateVisitorInfo', {infoName: cookieName, infoDomain: cookieDomain});
        }
      }
    };

    if (cartSharingId) {
      window.OracleUnifiedVisit['secondaryId'] = `${tenantId}_${cartSharingId}`;
    }

    importScript(oracleUnifiedVisitJsUrl);
  }
};
