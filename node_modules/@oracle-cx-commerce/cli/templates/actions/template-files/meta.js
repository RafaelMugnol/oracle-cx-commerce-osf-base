/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

const {ACTION_DEFAULT_PATH} = require('@oracle-cx-commerce/cli/templates/utils');
const {dashCase} = require('@oracle-cx-commerce/tools-util/strings');

function includeOutputReference(reducer) {
  return reducer
    ? `,\n  // The path to Json schema representing the redux states changes due to this reducer.
  // We expect the Json schema to contain the state definition and an example.\n  output: './schema/output.json'`
    : ``;
}
function determineMetaEndpoint(actionName, endpoint) {
  if (endpoint === true) {
    return `'${actionName}'`;
  }
  if (endpoint === undefined) {
    return '';
  }

  return `'${endpoint}'`;
}

function metaBody(actionName, endpoint, reducer, userName, packageName) {
  return `/**
 * Metadata for the ${actionName} action.
 */
export const ${actionName} = {
  name: '${actionName}',
  // Action's description
  description: 'Description for ${actionName}',
  author: '${userName}',
  // This action uses a Saga to invoke an endpoint.
  endpoints: [${determineMetaEndpoint(actionName, endpoint)}],
  // The path to Json schema representing the request Json structure and the example of payload.
  input: '${packageName}/${ACTION_DEFAULT_PATH}/${dashCase(actionName)}/schema/input.json',
  packageId: '${packageName}'${includeOutputReference(reducer)}
};
`;
}

module.exports = options => {
  let content = '';
  content += metaBody(options.actionName, options.endpoint, options.reducer, options.userName, options.packageName);

  return [
    {
      fileName: 'meta.js',
      relativePath: '',
      content
    }
  ];
};
