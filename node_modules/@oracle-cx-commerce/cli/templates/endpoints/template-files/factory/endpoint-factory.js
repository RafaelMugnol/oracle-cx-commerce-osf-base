/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
const endpointFactoryImports = `import {createEndpointFactory} from '@oracle-cx-commerce/endpoints/utils/endpoint-factory';
import {getEndpointOrigin} from '@oracle-cx-commerce/commerce-utils/selector';
`;

function endpointFactoryApiCatalog(swaggerDocumentConfigs) {
  if (swaggerDocumentConfigs.type === 'url') {
    return `apiCatalogPaths: ['${swaggerDocumentConfigs.apiCatalogPath}'],`;
  }

  if (swaggerDocumentConfigs.type === 'localFile') {
    return `apiCatalogPaths: [],
  async getApiCatalog({fetchApiCatalog, state, endpointId}) {
    return ${JSON.stringify(swaggerDocumentConfigs.swaggerApiMapping, null, 2)};
  },`;
  }
}

function endpointFactoryGetOriginFunctions(swaggerDocumentConfigs) {
  let getOriginFunctions = '';

  if (swaggerDocumentConfigs.apiCatalogHost) {
    getOriginFunctions += `
  getApiCatalogOrigin({state}) {
    return getEndpointOrigin(state, API_NAME).catalogOrigin;
  },`;
  }

  getOriginFunctions += `
  getOrigin({state}) {
    return getEndpointOrigin(state, API_NAME).origin;
  },`;

  return getOriginFunctions;
}

function endpointFactoryExport(apiName, customEndpointFactoryName, swaggerDocumentConfigs) {
  return `
const API_NAME = '${apiName}';

export const ${customEndpointFactoryName} = createEndpointFactory({
  ${endpointFactoryApiCatalog(swaggerDocumentConfigs)}
${endpointFactoryGetOriginFunctions(swaggerDocumentConfigs)}

  getHeaders() {
    const headers = {};

    return headers;
  }
});
`;
}

module.exports = options => {
  let content = '';
  content += endpointFactoryImports;
  content += endpointFactoryExport(
    options.formattedDirectoryName,
    options.endpointFactoryName,
    options.swaggerDocumentConfigs
  );

  return [
    {
      fileName: `${options.endpointFactoryNamePath}.js`,
      relativePath: '',
      content
    }
  ];
};
