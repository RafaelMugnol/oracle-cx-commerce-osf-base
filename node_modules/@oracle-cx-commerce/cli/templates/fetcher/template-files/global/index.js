/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

const fetcherImports = `import {createFetcher} from '@oracle-cx-commerce/fetchers/factory';
`;

const fetcherComments = `
/*
 * Function to make the endpoints call(s).
 *
 * Unsuccessful fetcher calls should not be memoized. Return the (significant) response object
 * from the fetcher so the memoizer can determine if the execution was successful, i.e. 'response.ok'.
 *
 * Populates state with shopper custom properties during server-side rendering
 */
`;

function fetcherBody(endpoint = 'ENDPOINT_PLACEHOLDER_VALUE') {
  return `export const fetcher = store => store.endpoint('${endpoint}');
`;
}
const fetcherGetDependenciesComments = `
/*
 * Executing fetcher functions is expensive. To ensure fetchers are not executed unnecessarily
 * their results are memoized. The memoized values are recomputed ONLY when a value in the
 * specified dependency array changes. To specify the dependencies you must provide a selector
 * that returns an array of values from the state. The 'getDependencies' selector must ALWAYS
 * return dependency values in the same order--so they can be compared to the previous dependencies.
 * Providing no 'getDependencies' selector will cause the fetcher to run ONE TIME ONLY--as there
 * are no dependencies to trigger re-computation.
 */`;

const fetcherGetDependencies = `
export const getDependencies = state => [];
`;

const fetcherExport = `
/*
 * Create memoized fetcher
 */
export default createFetcher(fetcher, getDependencies);
`;

module.exports = options => {
  let content = '';
  content += fetcherImports;
  content += fetcherComments;
  content += fetcherBody(options.endpoint);
  content += fetcherGetDependenciesComments;
  content += fetcherGetDependencies;
  content += fetcherExport;

  return [
    {
      fileName: 'index.js',
      relativePath: '',
      content
    }
  ];
};
