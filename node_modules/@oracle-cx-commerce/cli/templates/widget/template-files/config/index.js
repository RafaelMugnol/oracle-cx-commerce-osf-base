/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

function localeImport(options) {
  let localeImportContent = ``;
  for (const locale of options.localesList) {
    localeImportContent += `import * as ${locale} from './locales/${locale}';\n`;
  }

  return localeImportContent;
}

function configLocales(options) {
  const configResourcesContent = [];
  for (const locale of options.localesList) {
    configResourcesContent.push(`${locale}: {
      resources: ${locale}
    }`);
  }

  return configResourcesContent;
}

function configBody(locales) {
  return `/**
 * Design Studio configuration properties for the WidgetName component.
 */
const config = {
  properties: [
    {
      id: 'configIncludeExtraInfo',
      /**
       * Supported config types:
       *  - stringType
       *  - booleanType
       *  - optionType
       *  - multiSelectOptionType
       *  - sectionTitleType
       *  - collectionType
       *  - mediaType
       */
      type: 'booleanType',
      defaultValue: false,
      labelResourceId: 'includeExtraInfoLabel',
      helpTextResourceId: 'includeExtraInfoHelpText'
    }
  ],
  locales: {
    ${locales.join(',\n    ')}
  }
};

export default config;
`;
}

module.exports = options => {
  let content = localeImport(options);
  content += configBody(configLocales(options));

  return [
    {
      fileName: 'index.js',
      relativePath: 'config',
      content
    }
  ];
};
