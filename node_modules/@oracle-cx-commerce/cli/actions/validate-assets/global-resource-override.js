/*
 ** Copyright (c) 2021 Oracle and/or its affiliates.
 */
const path = require('path');
const fs = require('fs-extra');
const {___} = require('@oracle-cx-commerce/tools-i18n').i18n({directory: path.join(__dirname, './locales')});

const PATH_TO_GLOBAL_RESOURCE_OVERRIDES = path.join('assets', 'locales');
const MAX_GLOBAL_RESOURCES_OVERRIDES_LENGTH = 500;

class GlobalResourceOverride {
  /**
   * Initialize a Global Resource Overrides Object
   * @param {*} globalResourceOverridesFileName File name of the Container
   * @param {*} appDir
   */
  constructor(globalResourceOverridesFileName, appDir) {
    this.appDir = appDir;
    this.globalResourceOverrridesFileName = globalResourceOverridesFileName;
    this.path = path.join(appDir, PATH_TO_GLOBAL_RESOURCE_OVERRIDES, globalResourceOverridesFileName);

    this.foundIssues = [];

    this.globalResourceOverridesFileContent = null;
    this.processGlobalResourceOverridesFile();
  }

  processGlobalResourceOverridesFile() {
    if (fs.pathExistsSync(this.path)) {
      const globalResourceOverridesJsonData = fs.readFileSync(this.path, 'utf-8');
      let parsedGlobalResourcesOverridesJsonData;
      try {
        parsedGlobalResourcesOverridesJsonData = JSON.parse(globalResourceOverridesJsonData);
      } catch (error) {
        this.foundIssues.push(___`\t - contains an invalid JSON object.`);

        return;
      }

      const globalResourceOverrides = Object.keys(parsedGlobalResourcesOverridesJsonData);

      globalResourceOverrides.forEach(entry => {
        const localesEntryKeys = Object.keys(parsedGlobalResourcesOverridesJsonData[entry]);
        if (localesEntryKeys.length > MAX_GLOBAL_RESOURCES_OVERRIDES_LENGTH) {
          this.foundIssues.push(
            ___`\t - locales '${entry}' has an invalid entry ${entry} which exceeds max length of ${MAX_GLOBAL_RESOURCES_OVERRIDES_LENGTH} characters.`
          );
        }
      });
      this.globalResourceOverridesFileContent = parsedGlobalResourcesOverridesJsonData;
    }
  }
}

module.exports = {
  GlobalResourceOverride,
  PATH_TO_GLOBAL_RESOURCE_OVERRIDES
};
