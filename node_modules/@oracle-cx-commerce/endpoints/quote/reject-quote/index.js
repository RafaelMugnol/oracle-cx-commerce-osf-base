/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {mergeExcludeParams, transformCheckoutOrder} from '@oracle-cx-commerce/endpoints/utils/transform';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';

export const processInput = payload => {
  console.assert(payload.orderId !== undefined, 'reject quote requires an orderId.');
  const {queryParams, ...body} = payload;
  const excludeParams = mergeExcludeParams(queryParams, 'getIncompleteOrder');

  return {
    query: {...queryParams, exclude: excludeParams},
    body
  };
};

export const processOutput = async response => {
  const json = await getBodyAsJson(response);

  return response.ok ? transformCheckoutOrder(json) : populateError(response, json);
};

export default createEndpoint('rejectQuote', {
  processInput,
  processOutput
});
