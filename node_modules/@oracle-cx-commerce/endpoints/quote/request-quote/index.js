/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {
  mergeExcludeParams,
  transformCheckoutOrder,
  clearCurrentOrderFromSession
} from '@oracle-cx-commerce/endpoints/utils/transform';
import {getCurrentOrderId} from '@oracle-cx-commerce/commerce-utils/selector';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';

export const processInput = payload => {
  console.assert(payload.orderId !== undefined, 'request quote requires an orderId.');
  const {queryParams, ...body} = payload;
  const excludeParams = mergeExcludeParams(queryParams, 'getIncompleteOrder');

  return {
    query: {...queryParams, exclude: excludeParams},
    body
  };
};

export const processOutput = async (response, state, payload) => {
  const json = await getBodyAsJson(response);
  const currentOrderId = getCurrentOrderId(state);
  const {orderId} = payload;
  const order = response.ok ? transformCheckoutOrder(json) : populateError(response, json);

  return response.ok && json && json.state === 'PENDING_QUOTE' && orderId === currentOrderId
    ? {
        ...order,
        ...clearCurrentOrderFromSession(json)
      }
    : order;
};

export default createEndpoint('requestQuote', {
  processInput,
  processOutput
});
