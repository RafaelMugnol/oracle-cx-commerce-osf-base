/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';

/**
 * Adapter for the getCurrency endpoint.
 */
export default createEndpoint('getCurrency', {
  /**
   * Perform any necessary modification of the payload parameter that is
   * specified when dispatching an action that invokes this endpoint.
   *
   * @param {object} payload The original payload
   *
   * @return {object} The modified payload
   */
  processInput(payload) {
    const {repositoryId} = payload;

    console.assert(repositoryId, 'Missing argument "repositoryId" for endpoint "getCurrency"');

    // Including a "params" property in the returned payload will cause the given "repositoryId" property
    // to be substituted for the first occurrence of the string "{}" in the REST resource URL.
    return {
      ...payload,
      params: [repositoryId]
    };
  },

  /**
   * Convert the response from the endpoint invocation into an object
   * to be merged into the application state.
   *
   * @param {object} response The response from the endpoint call
   *
   * @return {object} An object to be merged into the application state
   */
  async processOutput(response) {
    const json = await getBodyAsJson(response);
    // Store the returned currency info under currencyRepository.currencyInfo.selectedCurrency.

    return response.ok
      ? {
          currencyRepository: {
            currencyInfo: {
              selectedCurrency: json
            }
          }
        }
      : populateError(response, json);
  }
});
