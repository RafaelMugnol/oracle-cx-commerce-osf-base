/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {mergeExcludeParams, transformEmbeddedOrder} from '@oracle-cx-commerce/endpoints/utils/transform';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';

const processInput = payload => {
  console.assert(payload.commerceItemId, 'Missing argument "commerceItemId" to update');
  const {queryParams, ...payloadBody} = payload;
  const excludeParams = mergeExcludeParams(queryParams, 'subResourceEndpoint');

  return {
    params: [payloadBody.commerceItemId],
    body: payloadBody,
    query: {...queryParams, exclude: excludeParams}
  };
};

const processOutput = async response => {
  const json = await getBodyAsJson(response);

  return response.ok ? transformEmbeddedOrder(json) : populateError(response, json);
};
export default createEndpoint('updateCartItem', {processInput, processOutput});
