/*
 ** Copyright (c) 2021 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';

// eslint-disable-next-line spellcheck/spell-checker
/**
 * This method transforms the recommendations global rules items array into
 * the recommendationsRepository.preview.globalrules array.
 *
 * @param {Array} items - Array of recommendationsGlobalRules
 * @returns {Object} - recommendationsRepository with global rules
 */
export const transformListRecommendationGlobalRulesResponse = items => {
  if (!items || !Array.isArray(items)) {
    return {};
  }

  return {
    recommendationsRepository: {preview: {globalRules: items}}
  };
};

/**
 * Adapter for the listRecommendationGlobalRules endpoint.
 */
export default createEndpoint('listRecommendationGlobalRules', {
  /**
   * Perform any necessary modification of the payload parameter that is
   * specified when dispatching an action that invokes this endpoint.
   *
   * @param {object} payload The original payload
   *
   * @return {object} The modified payload
   */
  processInput(payload) {
    return {query: payload};
  },

  /**
   * Convert the response from the endpoint invocation into an object
   * to be merged into the application state.
   *
   * @param {object} response The response from the endpoint call
   *
   * @return {object} An object to be merged into the application state
   */
  async processOutput(response) {
    const json = await getBodyAsJson(response);

    // Store the results under recommendationsRepository.preview.globalRules
    return response.ok
      ? {...transformListRecommendationGlobalRulesResponse(json.items), json}
      : populateError(response, json);
  }
});
