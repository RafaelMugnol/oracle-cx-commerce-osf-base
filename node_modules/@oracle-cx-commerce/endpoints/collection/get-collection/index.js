/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {getAssetLanguageHeader, populateError, populateFieldParams} from '@oracle-cx-commerce/endpoints/utils';

export const processInput = ({categoryId, expandChildren, includeCollectionsWithNoActiveProducts, $delta, ...rest}) => {
  console.assert(categoryId, 'getCollection requires a category ID');

  return {
    headers: getAssetLanguageHeader(rest),
    params: [categoryId],
    query: {
      expand: expandChildren ? 'childCategories' : undefined,
      disableActiveProdCheck: includeCollectionsWithNoActiveProducts,
      ...rest,
      ...populateFieldParams(rest)
    }
  };
};

export const processOutput = async (response, state, payload) => {
  const json = await getBodyAsJson(response);

  if (response.ok === true) {
    const output = {json};

    if (payload.$delta !== false) {
      Object.assign(output, {
        catalogRepository: {
          categories: {
            [json.id]: {
              ...json,
              route: json.route.replace(/^\//, '')
            }
          }
        }
      });
    }

    return output;
  }

  return populateError(response, json);
};

export default createEndpoint('getCollection', {
  processInput,
  processOutput
});
