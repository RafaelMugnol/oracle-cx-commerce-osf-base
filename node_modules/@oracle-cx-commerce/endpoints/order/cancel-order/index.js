/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {mergeExcludeParams, transformGetOrder} from '@oracle-cx-commerce/endpoints/utils/transform';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';

export const processInput = payload => {
  console.assert(payload.orderId !== undefined, 'cancelOrder requires an orderId.');
  console.assert(payload.reason !== undefined, 'cancelOrder requires a REASON.');

  const {orderId, reason: cancelReason, queryParams} = payload;

  const excludeParams = mergeExcludeParams(queryParams, 'cancelOrder');

  return {
    query: {...queryParams, exclude: excludeParams},
    body: {
      orderId,
      cancelReason
    }
  };
};

export const processOutput = async response => {
  const json = await getBodyAsJson(response);

  if (!response.ok) {
    return populateError(response, json);
  }

  return transformGetOrder(json.order);
};

export default createEndpoint('cancelOrder', {
  processInput,
  processOutput
});
