/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {mergeExcludeParams, transformOrderConfirmation} from '@oracle-cx-commerce/endpoints/utils/transform';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';

export default createEndpoint('getOrderConfirmation', {
  processInput(payload) {
    console.assert(payload.uuid !== undefined, 'getOrderConfirmation requires an uuid.');

    const {uuid, queryParams} = payload;
    const excludeParams = mergeExcludeParams(queryParams, 'getOrder');

    return {
      params: [uuid],
      query: {...queryParams, exclude: excludeParams}
    };
  },
  async processOutput(response) {
    const order = await getBodyAsJson(response);

    return response.ok ? transformOrderConfirmation(order) : populateError(response, order);
  }
});
