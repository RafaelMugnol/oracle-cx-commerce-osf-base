/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';

export const processInput = payload => {
  const {grantType, username, password, samlResponse, orderMergeMode} = payload;

  let body = {};
  /* eslint-disable camelcase */
  if (grantType === 'saml_credentials') {
    body = orderMergeMode
      ? {grant_type: grantType, saml_response: samlResponse, /* relay_state: relayState,*/ orderMergeMode}
      : {grant_type: grantType, saml_response: samlResponse /*, relay_state: relayState,*/};
    //If relayState is not empty, login endpoint expects a valid organizationId in relayState in case of b2b login
    //As we are using relayState for url path to be redirected, removed the relayState from input
  } else {
    body = orderMergeMode
      ? {grant_type: grantType || 'password', username, password, orderMergeMode}
      : {grant_type: grantType || 'password', username, password};
  }
  /* eslint-enable camelcase */

  return {body: {...body}};
};

export const processOutput = async response => {
  const json = await getBodyAsJson(response);

  return response.ok
    ? {
        clientRepository: {
          context: {
            session: {
              token: json.access_token,
              tokenType: json.token_type,
              tokenExpires: json.expires_in,
              authnRequest: null,
              authnRequestTarget: null,
              samlResponse: null,
              relayState: null
            }
          }
        }
      }
    : {
        error: {
          errorCode: json.errorCode || json.error,
          message: json.message || json.error,
          status: response.status
        }
      };
};

export default createEndpoint('login', {
  processInput,
  processOutput
});
