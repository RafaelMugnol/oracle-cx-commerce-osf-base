/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';

/**
 * Perform any necessary extra processing on the payload object that is
 * included when dispatching an action that invokes this endpoint.
 */
export const processInput = payload => {
  // The supported payload properties are:
  // * text: A string to be passed to the typeahead service.
  // * maxResults: The maximum number of typeahead results (optional-- if
  //               unspecified, the GS-configured maximum is used)
  // * searchServicePath: The path of the search service to be used.
  // * searchKey: The search key to be supplied to the search service.
  const {text, maxResults, searchServicePath = 'Default/keywords/typeahead', searchKey = 'keywords'} = payload;

  return {
    // Append the correct service path to the endpoint URL.
    params: [searchServicePath],

    // Use the given search text as the "Ntt" parameter in the endpoint URL.
    query: {Ntt: text, Ntk: searchKey, Nrpp: maxResults}
  };
};

/**
 * Convert the response from the endpoint invocation into an object
 * to be merged into the application state.
 */
export const processOutput = async response => {
  const json = await getBodyAsJson(response);

  // Store the result in the state, under searchRepository.typeaheadSearchResults.
  const state = response.ok ? {searchRepository: {typeaheadSearchResults: json}} : populateError(response, json);

  return state;
};

/**
 * Endpoint adapter for the 'typeahead' action.
 * This maps the action to an 'assemblerPages' endpoint invocation.
 */
export default createEndpoint('assemblerPages', {
  processInput,
  processOutput
});
