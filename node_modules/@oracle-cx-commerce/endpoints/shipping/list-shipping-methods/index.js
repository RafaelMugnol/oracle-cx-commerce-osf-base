/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {getCurrentOrderId, getPage} from '@oracle-cx-commerce/commerce-utils/selector';
import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';

import {populateError} from '@oracle-cx-commerce/endpoints/utils';
import {transformShippingMethods} from '@oracle-cx-commerce/endpoints/utils/transform';

export const processInput = payload => {
  return {
    body: {
      ...payload
    }
  };
};

export const processOutput = async (response, state) => {
  const json = await getBodyAsJson(response);
  const {items} = json;
  if (response.ok) {
    const res = transformShippingMethods(items);
    const currentOrderId = getCurrentOrderId(state);
    const contextOrderId = getPage(state).contextId;
    const orderId = contextOrderId ? contextOrderId : currentOrderId;

    return {
      clientRepository: {
        request: {
          shippingMethods: res.sgIdToListOfShippingMethodsMap
        }
      },
      catalogRepository: {
        shippingMethods: res.smIdToShippingMethodDetails
      },
      orderRepository: {
        shippingMethods: {
          [orderId]: {
            ...res.sgIdToListOfShippingMethodsMap
          }
        }
      }
    };
  }

  return populateError(response, json);
};

export default createEndpoint('listShippingMethods', {
  processInput,
  processOutput
});
