/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';

import {getCurrentOrderId} from '@oracle-cx-commerce/commerce-utils/selector';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';
import {transformShippingMethods} from '@oracle-cx-commerce/endpoints/utils/transform';

export const processInput = payload => {
  return {
    query: {...payload}
  };
};

export const processOutput = async (response, state) => {
  const json = await getBodyAsJson(response);
  const {items} = json;

  if (response.ok) {
    const result = transformShippingMethods(items);
    const orderId = getCurrentOrderId(state);
    if (orderId !== undefined) {
      return {
        orderRepository: {
          shippingMethods: {
            [orderId]: {
              ...result.sgIdToListOfShippingMethodsMap
            }
          }
        },
        catalogRepository: {
          shippingMethods: result.smIdToShippingMethodDetails
        }
      };
    }

    return {};
  }

  return populateError(response, json);
};

export default createEndpoint('listShippingMethodsForCurrentOrder', {
  processInput,
  processOutput
});
