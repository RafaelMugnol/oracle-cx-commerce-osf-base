/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {getUpdatedAddress, populateError} from '@oracle-cx-commerce/endpoints/utils';
import {transformOrganizationDefaultAddress} from '@oracle-cx-commerce/endpoints/utils/transform';

export const processInput = payload => {
  const newAddress = getUpdatedAddress(payload);
  console.assert(payload.addressId, 'Missing argument addressId for endpoint updateAddress');

  const {addressId, addressType, ...address} = newAddress;

  return {
    params: [addressId],
    body: {
      addressType,
      address
    }
  };
};

export const processOutput = async (response, state, inputPayload) => {
  const json = await getBodyAsJson(response);

  return response.ok
    ? transformOrganizationDefaultAddress(json, state, getUpdatedAddress(inputPayload))
    : populateError(response, json);
};

export default createEndpoint('updateAddress', {
  processInput,
  processOutput
});
