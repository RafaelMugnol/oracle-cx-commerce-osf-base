/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {createEndpoint, getBodyAsJson} from '@oracle-cx-commerce/endpoints/factory';
import {populateError} from '@oracle-cx-commerce/endpoints/utils';

/**
 * Normalizes the getAllSkusPrices endpoint response into the priceRepository format.
 *
 * @param skuPrices the prices object returned from the server.
 * @returns the normalized prices.
 */
const normalizeOutput = skuPrices => {
  const pricesBySkuId = skuPrices.reduce((current, priceInfo) => {
    const skuIdToPrices = Object.entries(priceInfo)[0];
    const priceData = skuIdToPrices[1];
    [priceData.skuId] = skuIdToPrices;
    current[priceData.skuId] = priceData;

    return current;
  }, {});

  return {priceRepository: {skus: {...pricesBySkuId}}};
};

export const processInput = payload => {
  console.assert(payload.skuIds, 'getAllSKUsPrices requires an array of SKU IDs.');

  return {query: {ids: payload.skuIds}};
};

export const processOutput = async response => {
  const json = await getBodyAsJson(response);

  return response.ok ? normalizeOutput(json.items) : populateError(response, json);
};

export default createEndpoint('getAllSKUsPrices', {
  processInput,
  processOutput
});
