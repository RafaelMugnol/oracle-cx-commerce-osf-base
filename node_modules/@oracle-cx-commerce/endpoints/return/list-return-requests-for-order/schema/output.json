{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "id": "https://cloud.oracle.com/commerce-cloud/storefront/schemas/wapi-return/listReturnRequestsForOrder/output.json",
  "title": "Return Requests of Order",
  "description": "Following model is returned when operation succeeds.",
  "type": "object",
  "properties": {
    "csrRepository": {
      "type": "object",
      "description": "CSR Repository contains returns and exchanges of orders",
      "properties": {
        "returns": {
          "description": "Return Requests of the order",
          "type": "object",
          "properties": {
          "returnRequestId": {
            "description": "The ID of the return request.",
            "type": "object",
            "properties": {
              "returnRequestId": {
                "description": "The ID of the return request.",
                "type": "string"
              },
              "isExchangeRequest": {
                "description": "Either it is exchange / return request.",
                "type": "boolean"
              },
              "returnItems": {
                "description": "List of return items in the return request.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "quantityToReturn": {
                      "description": "The quantity returned of the return item.",
                      "type": "integer"
                    },
                    "productId": {
                      "description": "The Product ID of the return item.",
                      "type": "string"
                    },
                    "returnReason": {
                      "description": "The return reason of the return item.",
                      "type": "string"
                    },
                    "actionCode": {
                      "description": "The action code that has been set on the externalData item by the configurator system.",
                      "type": "string"
                    },
                    "additionalProperties": {
                      "description": "Additional properties returned by return request validation webhook",
                      "type": "object"
                    },
                    "state": {
                      "description": "The state of the return item.",
                      "type": "string"
                    },
                    "catRefId": {
                      "description": "The SKU ID of the return item.",
                      "type": "string"
                    },
                    "returnRequired": {
                      "description": "Boolean value to determine if the item has to be physically received.",
                      "type": "boolean"
                    },
                    "unitPrice": {
                      "description": "Unit price of the item",
                      "type": "number"
                    },
                    "primaryThumbImageURL": {
                      "description": "The url for the return item image",
                      "type": "string"
                    },
                    "primaryImageAltText": {
                      "description": "The alt text for the return item image",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Display Name of the Product",
                      "type": "string"
                    },
                    "skuOptionInfo": {
                      "description": "Product Variant Information.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "optionValue": {
                            "description": "Value of the Dynamic attribute",
                            "type": "string"
                          },
                          "optionName": {
                            "description": "Name of the Dynamic attribute",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "orderInfo": {
                "description": "Order Information.",
                "type": "object",
                "properties": {
                  "orderId": {
                    "description": "Commerce id for this order.",
                    "type": "string"
                  }
                }
              },
              "nonreturnable": {
                "description": "Indicates whether the item is returnable or not",
                "type": "boolean"
              },
              "totalRefund": {
                "description": "The total refund amount of the return request.",
                "type": "number"
              },
              "returnLabel": {
                "description": "Return label of the return request",
                "type": "string"
              },
              "authorizationNumber": {
                "description": "RMA of the return request",
                "type": "string"
              },
              "createdDate": {
                "description": "The authorization date of the return request.",
                "type": "string"
              },
              "state": {
                "description": "Status of Return Request.",
                "type": "string"
              },
              "additionalProperties": {
                "description": "Additional properties returned by return request validation webhook",
                "type": "object"
              },
              "totalReturnQuantity": {
                "description": "The total returned quantity in the return request.",
                "type": "number"
              },
              "trackingNumber": {
                "description": "Tracking Number of return request",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "operation": {
                "description": "The return operation of the return request",
                "type": "string"
              },
              "nonReturnableReason": {
                "description": "Non returnable reason for the item being non-returnable ",
                "type": "string"
              }
            }
          }
        }
      }
        }
      },
    "error": {
      "type": "object",
      "description": "The error object",
      "properties": {
        "errorCode": {
          "description": "The error code.",
          "type": "string"
        },
        "errorMessage": {
          "description": "The error message.",
          "type": "string"
        },
        "status": {
          "description": "The error status.",
          "type": "string"
        }
      }
    }
  },
  "example": {
    "csrReposority": {
      "returns": {
        "100001": {
          "returnRequestId": "100001",
          "isExchangeRequest": false,
          "returnItems": [
            {
              "quantityToReturn": 1,
              "productId": "Product_18Cxi",
              "returnReason": "Did Not Like",
              "additionalProperties": {},
              "state": "AWAITING_RETURN",
              "catRefId": "Sku_18Dxi",
              "returnRequired": true,
              "primaryThumbImageURL": "/ccstore/v1/images/?source=/file/v6155711626513500309/products/doctordolittle_LARGE.jpg&height=100&width=100",
              "displayName": "Dr. Dolittle",
              "primaryImageAltText": "Dr. Dolittle"
            }
          ],
          "totalRefund": 16.19,
          "returnLabel": null,
          "authorizationNumber": "100001",
          "createdDate": 1573621630000,
          "additionalProperties": {},
          "state": "Approved",
          "totalReturnQuantity": 1,
          "trackingNumber": null,
          "operation": "process",
          "stateKey": "PENDING_CUSTOMER_ACTION",
          "orderInfo": {
            "orderId": "o30411"
          }
        }
      }
    },
    "error": {
      "errorCode": "1000500",
      "errorMessage": "Sample error message",
      "status": "500"
    }
  }
}
