/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

const {resolveBoolean} = require('../..');

describe('Test the `resolveBoolean` method', () => {
  test('Method returns the expected value', () => {
    const inputAndExpectedResult = [
      [false, false],
      [true, true],
      [0, false],
      [1, true],
      [2, true],
      [-3, true],
      [0.0, false],
      [0.1, true],
      [6.28, true],
      // Jest/Babel cannot parse BigInts properly.
      // Uncomment the next two lines when the bug gets fixed (https://github.com/facebook/jest/issues/6829):
      // [0n, false],
      // [9007199254740992n, true],
      // [-10000000n, true],
      ['', false],
      [' ', false],
      ['    ', false],
      ['true', true],
      ['false', false],
      [' true ', true],
      [' false ', false],
      ['tRUE', true],
      ['fALSE', false],
      [' tRUE ', true],
      [' fALSE ', false],
      ['0', false],
      ['1', true],
      ['2', true],
      ['-3', true],
      [' 0 ', false],
      [' 1 ', true],
      [' 2 ', true],
      [' -3 ', true],
      ['potato', undefined],
      [' potato ', undefined],
      [{}, undefined],
      [{true: true}, undefined],
      [[], undefined],
      [[true], undefined],
      [() => {}, undefined],
      [() => false, undefined],
      [Symbol('potato'), undefined],
      [null, undefined],
      [undefined, undefined]
    ];

    // If this fails, check if the number of elements in `inputAndExpectedResult` has changed, and why?
    expect.assertions(39);

    for (const [input, expected] of inputAndExpectedResult) {
      expect(resolveBoolean(input)).toBe(expected);
    }
  });
});

describe('Private methods are not exported on production mode', () => {
  // FIXME: This does not work. Find another way to force the environment to be 'production' only during this test.

  const nodeEnvBackup = process.env.NODE_ENV;

  beforeAll(() => {
    // console.log(process.env.NODE_ENV);
    process.env.NODE_ENV = 'production';
  });

  afterAll(() => {
    process.env.NODE_ENV = nodeEnvBackup;
    // console.log(process.env.NODE_ENV);
  });

  test('Load the `env` code and check the private methods are not there.', () => {
    // console.log(process.env.NODE_ENV);
    // console.log(require('../env'));
    // console.log(require.cache);
  });
});
