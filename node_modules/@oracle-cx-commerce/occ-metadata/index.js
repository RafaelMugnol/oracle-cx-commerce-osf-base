/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

const fs = require('fs');
const path = require('path');
const logger = require('@oracle-cx-commerce/logger/cli');
const {___} = require('@oracle-cx-commerce/tools-i18n').i18n({directory: require('path').join(__dirname, './locales')});

module.exports = {
  getMinimumRequiredOCCVersion: () => {
    try {
      const {oracleCommerceCloudVersion} = JSON.parse(
        fs.readFileSync(path.resolve(__dirname, 'occ.manifest.json'), 'utf-8')
      );

      return oracleCommerceCloudVersion;
      // If manifest file is missing, print the message below
    } catch (error) {
      logger.warn(___`Unable to determine the minimum required OCC version needed for this version of OSF`);
    }
  },
  /**
   * Returns the OCC packages in the local occ.manifest.json
   * @returns {Object} a map of Oracle Commerce package to version (e.g. {'@oracle-cx-commerce/cli': '0.5.0'})
   * @throws if there's no occ.manifest.json
   */
  getOCCVersions: () => {
    if (!fs.existsSync(path.join(__dirname, 'occ.manifest.json'))) {
      throw new Error(`Oracle CX Commerce manifest not found at ${__dirname}/occ.manifest.json`);
    }

    return require(path.join(__dirname, 'occ.manifest.json')).oracleCommerce;
  },
  /**
   * Returns the dependencies of OCC based on the local occ.manifest.json
   * @returns {Object} A map of dependency name to Array of strings (the versions it depend on).
   *    e.g. {'@babel/cli': ['7.4.4', '7.4.5']}
   * @throws if there's no occ.manifest.json
   */
  getOCCDependencies: () => {
    if (!fs.existsSync(path.join(__dirname, 'occ.manifest.json'))) {
      throw new Error(`Oracle CX Commerce manifest not found at ${__dirname}/occ.manifest.json`);
    }

    return require(path.join(__dirname, 'occ.manifest.json')).dependencies;
  }
};
