/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {getOrder, getPage, getCurrentOrder} from '@oracle-cx-commerce/commerce-utils/selector';
import {PAYMENT_METHOD_CREDIT_CARD} from '@oracle-cx-commerce/commerce-utils/constants';
import {getPayerAuthPaymentGroup} from '@oracle-cx-commerce/react-components/utils/payment';

/**
 * Returns widget's required data
 * @param {Object} state the state object
 * @returns required data
 */
export const getComponentData = state => {
  // get order id from path param of url which is set as contextId in page repository
  const orderId = getPage(state).contextId;
  const order = orderId ? getOrder(state, {id: orderId}) : getCurrentOrder(state);
  const {paymentGroups = {}, uuid} = order;

  //Get the paymentGroup with uiIntervention prop set as payerAuthRequired,
  //paymentState to be INITIAL and paymentMethod to be creditCard
  let payerAuthPaymentGroup = getPayerAuthPaymentGroup(paymentGroups);
  if (payerAuthPaymentGroup && payerAuthPaymentGroup.paymentMethod !== PAYMENT_METHOD_CREDIT_CARD) {
    payerAuthPaymentGroup = undefined;
  }

  return {
    orderId,
    payerAuthPaymentGroup,
    orderUUID: uuid
  };
};
