/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {CheckoutShippingContext} from '@oracle-cx-commerce/react-widgets/checkout/checkout-shipping-container/context';
import React, {useContext, useMemo, useEffect} from 'react';
import ShippingGroupDetails from '@oracle-cx-commerce/react-widgets/checkout/checkout-single-shipping-details/components/shipping-group-details';
import {getHardgoodShippingGroupsWithItems} from '@oracle-cx-commerce/react-components/utils/shipping';
import {noop} from '@oracle-cx-commerce/utils/generic';
import PropTypes from 'prop-types';

/**
 * Component that displays the details of all the shipping groups of type 'hardgoodShippingGroup'
 * @param props
 */
const HardgoodShippingGroupsDetails = props => {
  // Checkout Shipping Context
  const {checkoutShippingTabs = {}, setShippingStatus = noop} = useContext(CheckoutShippingContext);

  const {
    shippingGroups = {},
    commerceItems = {},
    editButtonRedirectIndex = checkoutShippingTabs.MULTI_SHIPPING_EDIT_TAB_INDEX,
    isMultiShipping = true
  } = props;

  // Filter the shipping groups of type 'hardgoodShippingGroup' that contains commerce items
  const hardgoodShippingGroups = useMemo(() => {
    return getHardgoodShippingGroupsWithItems(shippingGroups);
  }, [shippingGroups]);

  /**
   * Click handler function for the 'edit' link
   * It sets the shipping index to the multi shipping edit screen
   */
  const onEditClick = () => {
    setShippingStatus(prevState => {
      return {
        ...prevState,
        tabIndex: editButtonRedirectIndex,
        showConinueToPayment: false,
        enableContinue: false
      };
    });
  };

  /**
   * If there is only a single shipping group, then set the tabIndex to the single shipping summary phase
   */
  useEffect(() => {
    if (hardgoodShippingGroups.length === 1) {
      setShippingStatus(prevState => {
        return {...prevState, tabIndex: checkoutShippingTabs.SINGLE_SHIPPING_SUMMARY_TAB_INDEX};
      });
    }
  }, [checkoutShippingTabs.SINGLE_SHIPPING_SUMMARY_TAB_INDEX, hardgoodShippingGroups.length, setShippingStatus]);

  return (
    <div className="HardgoodShippingGroupsDetails">
      {(hardgoodShippingGroups || []).map((shippingGroup, index) => (
        <div key={shippingGroup.shippingGroupId}>
          <ShippingGroupDetails
            shippingGroup={shippingGroup}
            commerceItems={commerceItems}
            showEdit={true}
            onEditClick={onEditClick}
            isMultiShipping={isMultiShipping}
            shippingDeliveryIndex={index + 1}
            {...props}
          />
        </div>
      ))}
    </div>
  );
};

HardgoodShippingGroupsDetails.propTypes = {
  /**
   * Commerce Items
   */
  commerceItems: PropTypes.objectOf(PropTypes.object).isRequired,

  /**
   * Shipping Groups
   */
  shippingGroups: PropTypes.objectOf(PropTypes.object).isRequired
};

HardgoodShippingGroupsDetails.defaultProps = {};

export default React.memo(HardgoodShippingGroupsDetails);
