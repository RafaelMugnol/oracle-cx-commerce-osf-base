/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {useContext} from 'react';
import {StoreContext} from '@oracle-cx-commerce/react-ui/contexts';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/checkout/checkout-multi-shipping-details/components/ship-item-to-new-address/styles.css';
import {splitItemToNewShippingGroup} from '@oracle-cx-commerce/react-components/utils/shipping';

/**
 * Component that handles the shipping of a cart item to a new address
 * @param props
 */
export const ShipItemToNewAddress = props => {
  //resources
  const {actionShipThisItemToMultipleAddresses} = props;

  const {shippingGroups = {}, shippingGroupId, commerceId, quantity} = props;

  const store = useContext(StoreContext);
  const {action} = store;

  /**
   * Failure call back function
   * @param {Object} error error object
   */
  const onNotOk = ({error: {message = ''} = {}} = {}) => {
    action('notify', {level: 'error', message});
  };

  /**
   * Click handler function for 'Ship this item to multiple addresses' link
   * Creates a new shipping group to split the cart item
   * It reduces the cart item quantity of the previous shipping group by 1,
   * and sets the cart item quantity for the new shipping group to 1
   */
  const handleClick = async () => {
    const response = await splitItemToNewShippingGroup(store, {
      shippingGroups,
      commerceId,
      shippingGroupId,
      currentShippingGroupQuantity: quantity - 1,
      newShippingGroupQuantity: 1
    });
    if (!response.ok) {
      onNotOk(response);
    }
  };

  return (
    <Styled id="ShipItemToNewAddress" css={css}>
      <div className="ShipItemToNewAddress__Wrapper">
        <button type="button" className="ShipItemToNewAddress__Text" onClick={handleClick}>
          {actionShipThisItemToMultipleAddresses}
        </button>
      </div>
    </Styled>
  );
};
