/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {useContext} from 'react';
import {ContainerContext} from '@oracle-cx-commerce/react-ui/contexts';
import Card from '@oracle-cx-commerce/react-components/card';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/checkout/checkout-order-confirmation/styles.css';

/**
 * Widget to display Order Confirmation Details
 * @param {props} component props
 */
const CheckoutOrderConfirmation = props => {
  //locales
  const {
    textOrderConfirmation,
    textReceiveEmailAfterApproval,
    textAfterapprovalPendingPaymentMessage,
    headingOrderConfirmation,
    textOrderNumber
  } = props;
  //context
  const {orderId = '', orderState, approvalSystemMessages, paymentData} = useContext(ContainerContext) || {};

  const isPendingApproval =
    orderState === 'PENDING_APPROVAL' || orderState === 'PENDING_APPROVAL_TEMPLATE' ? true : false;

  let isPaymentRequiredAfterApproval = false;
  if (isPendingApproval) {
    isPaymentRequiredAfterApproval = paymentData[0] !== undefined ? paymentData[0].default_initial : true;
  }

  return (
    <Styled id="CheckoutOrderConfirmation" css={css}>
      {orderId && (
        <div className="CheckoutOrderConfirmation">
          <div className="CheckoutOrderConfirmation__ConfirmationMessage">
            <h1 className="CheckoutOrderConfirmation__Heading">{headingOrderConfirmation}</h1>
            <Card className="CheckoutOrderConfirmation__OrderDetails">
              {isPendingApproval ? (
                <div>
                  <span>{approvalSystemMessages[0]}</span>
                  <span>{textReceiveEmailAfterApproval}</span>
                  <br></br>
                  {isPaymentRequiredAfterApproval && <span>{textAfterapprovalPendingPaymentMessage}</span>}
                </div>
              ) : (
                <div>
                  <span>{textOrderConfirmation}</span>
                </div>
              )}
              <div className="CheckoutOrderConfirmation__OrderNumber">
                <span>{textOrderNumber}</span>
                <span className="CheckoutOrderConfirmation__OrderId">{orderId}</span>
              </div>
            </Card>
          </div>
        </div>
      )}
    </Styled>
  );
};

export default CheckoutOrderConfirmation;
