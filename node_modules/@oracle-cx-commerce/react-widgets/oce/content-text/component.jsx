/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {useContext} from 'react';
import {ContainerContext, StoreContext} from '@oracle-cx-commerce/react-ui/contexts';
import {wrapContentItem, buildContentItem} from '@oracle-cx-commerce/react-widgets/oce/utils';
import {getContentItems} from '@oracle-cx-commerce/commerce-utils/selector';
import css from '@oracle-cx-commerce/react-widgets/oce/content-text/styles.css';

/**
 * Content Text widget used to display selected text from content type
 */
/* eslint-disable react/no-danger */
function ContentText(props) {
  const store = useContext(StoreContext);
  const containerContext = useContext(ContainerContext);

  //retrieve the json data saved in the store
  const rawData = getContentItems(store.getState(), containerContext);
  const data = Object.values(rawData.contentItems);
  const {settings = {}} = props;
  let contentData = '';
  if (data) {
    for (const [key] of Object.entries(data)) {
      const {fields: contentFields} = data[key];
      const {productField: prodField} = settings;
      //loop through the json data and check if the key matches the
      // entry set in admin
      if (contentFields) {
        // eslint-disable-next-line no-loop-func
        Object.entries(contentFields).forEach(function ([key, value]) {
          if (key === prodField) {
            if (typeof value == 'object' && typeof value.fields !== 'undefined') {
              // this is a json object so needs built
              contentData += buildContentItem(value);
            } else {
              // this is just a string, so wrap and display it
              contentData += wrapContentItem(value, key);
            }
          }
        });
      }
    }

    return <div className="ContentText" css={css} dangerouslySetInnerHTML={{__html: contentData}}></div>;
  }

  return <div className="ContentText"></div>;
}

export default ContentText;
