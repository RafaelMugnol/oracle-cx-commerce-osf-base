/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React from 'react';
import {getExpandedCategories} from '@oracle-cx-commerce/react-widgets/category/collection-navigation-mobile/selectors';
import CaretDownIcon from '@oracle-cx-commerce/react-components/icons/caret-down';
import CaretRightIcon from '@oracle-cx-commerce/react-components/icons/caret-right';
import Link from '@oracle-cx-commerce/react-components/link';

/**
 *  Displays each menu item and its child items in the list
 */
const MenuItemMobile = props => {
  const {
    categoryId,
    displayName,
    route,
    childCategories,
    onLinkClick,
    numberOfChildCategoriesToDisplay,
    catalogCategories,
    visibleChildCategories,
    toggleChildCategories
  } = props;

  const showChildCategories = !!visibleChildCategories[categoryId];

  const hasChildCategoriesToDisplay = Boolean(
    childCategories && childCategories.length && numberOfChildCategoriesToDisplay > 0
  );

  return (
    <div className="CollectionNavigation__MenuItem">
      <div className="CollectionNavigation__MenuItem__LinkRow">
        <Link href={route} onClick={() => onLinkClick(route)} className="CollectionNavigation__MenuItem__Link">
          {displayName}
        </Link>
        {hasChildCategoriesToDisplay && (
          <button
            type="button"
            onClick={() => toggleChildCategories(categoryId)}
            className="CollectionNavigation__MenuItem__Icon"
          >
            {(!showChildCategories && <CaretRightIcon />) || <CaretDownIcon />}
          </button>
        )}
      </div>
      {showChildCategories && (
        <div className="CollectionNavigation__ChildItems">
          {getExpandedCategories(childCategories, catalogCategories).map(({id: categoryId, ...category}) => (
            <MenuItemMobile
              key={categoryId}
              {...category}
              categoryId={categoryId}
              onLinkClick={onLinkClick}
              numberOfChildCategoriesToDisplay={numberOfChildCategoriesToDisplay - 1}
              catalogCategories={catalogCategories}
              visibleChildCategories={visibleChildCategories}
              toggleChildCategories={toggleChildCategories}
            />
          ))}
        </div>
      )}
    </div>
  );
};

export default MenuItemMobile;
