/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {useCallback, useContext} from 'react';

import {CollectionNavCardContext} from '@oracle-cx-commerce/react-widgets/category/collection-navigation/context';
import ExpandIcon from '@oracle-cx-commerce/react-components/icons/expand';
import PropTypes from 'prop-types';

const MemoizedExpandIcon = React.memo(ExpandIcon);

/**
 *  Provides a button with the name of the child collection that it drills down in to.
 */
const NavigateToChildCategoryButton = ({category: {id, displayName}}) => {
  const {index, isVisible} = useContext(CollectionNavCardContext);

  const handleKeyDown = useCallback(e => {
    e.key === 'Enter' && e.target.click();
  }, []);

  return (
    <label
      htmlFor={`CollectionNavigation_ChildCard--${id}`}
      tabIndex={isVisible(index) ? 0 : -1}
      onKeyDown={handleKeyDown}
      // eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role
      role="menuitem"
      aria-label={displayName}
    >
      <span aria-hidden="true">{displayName}</span>
      <MemoizedExpandIcon className="CollectionNavigation_ExpandIcon" role="none" />
    </label>
  );
};

NavigateToChildCategoryButton.propTypes = {
  /** An object representing a category in the catalog */
  category: PropTypes.shape({
    /** The id of the category */
    id: PropTypes.string.isRequired,
    /** Name of the category */
    displayName: PropTypes.string.isRequired
  }).isRequired
};

NavigateToChildCategoryButton.defaultProps = {};

export default NavigateToChildCategoryButton;
