/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {getCategory, getGlobalContext} from '@oracle-cx-commerce/commerce-utils/selector';
import {connect} from '@oracle-cx-commerce/react-components/provider';

const getChildCategories = (parentCategory, state) => {
  return Array.from(
    new Set(
      parentCategory.reduce((array, categoryId) => {
        const {childCategories} = getCategory(state, {categoryId});
        if (childCategories) {
          const childCategoryArray = childCategories.map(({id}) => id);

          return array.concat(childCategoryArray);
        }

        return array;
      }, [])
    )
  );
};

export const getData = state => {
  const levels = [];

  // Gets the an [id] of the root categories
  const rootCategories = getGlobalContext(state).categories || [];
  levels.push(rootCategories);

  // iterate through levels
  // eslint-disable-next-line no-constant-condition
  while (true) {
    const parents = levels[levels.length - 1];
    const children = getChildCategories(parents, state);
    if (children.length === 0) {
      break;
    }
    levels.push(children);
  }

  return {
    rootCategories,
    secondaryCategories: Array.from(new Set(levels.reduce((array, categoryId) => array.concat(categoryId))))
  };
};

const decoratedCategory = (WrappedComponent, dataDecorator) =>
  connect((state, catId) => {
    const resp = getCategory(state, catId);

    return dataDecorator(resp);
  })(WrappedComponent);

export const connectToCategory = component =>
  decoratedCategory(component, categoryData => {
    return {category: categoryData};
  });
