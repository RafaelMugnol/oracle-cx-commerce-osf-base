/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React from 'react';
import Card from '@oracle-cx-commerce/react-components/card';
import Link from '@oracle-cx-commerce/react-components/link';
import Styled from '@oracle-cx-commerce/react-components/styled';
import {useDateFormatter} from '@oracle-cx-commerce/react-components/utils/hooks';
import UserIcon from '@oracle-cx-commerce/react-components/icons/user';
import {isEmptyObject} from '@oracle-cx-commerce/utils/generic';
import css from '@oracle-cx-commerce/react-widgets/profile/contact-registration-detail/components/contact-registation-request-information/styles.css';
import PropTypes from 'prop-types';

/**
 * This component is used to display the contact registration details like status, name, email, site
 *
 * @param props
 */
const ContactRegistrationRequestInformation = props => {
  //resources
  const {
    labelStatus,
    labelRequestDate,
    labelRequestId,
    labelSite,
    labelNotesFromTheRequester,
    textNameNotRetained,
    contactRequest = {}
  } = props;

  const {profile = '', status = '', createdTime = '', id = '', site = '', requesterComments = ''} = contactRequest;

  const options = {year: 'numeric', month: 'long', day: 'numeric'};
  const formatDate = useDateFormatter({...options});

  const CONTACT_REQUEST_STATES = {
    new: 'textRegistrationRequestsNew',
    review: 'textRegistrationRequestsReview',
    rejected: 'textRegistrationRequestRejected',
    moreInfoNeeded: 'textMoreInfoRequired'
  };

  return (
    <Styled id="ContactRegistrationRequestInformation" css={css}>
      {!isEmptyObject(contactRequest) && (
        <Card className="ContactRegistrationRequestInformation__Card">
          <div className="ContactRegistrationRequestInformation">
            <div className="ContactRegistrationRequestInformation__Profile">
              <div>
                <UserIcon className="ContactRegistrationRequestInformation__ProfileIcon" />
              </div>
              <div className="ContactRegistrationRequestInformation__FirstNameEmail">
                {profile && `${profile.firstName} ${profile.lastName}`}
                {!profile && textNameNotRetained}
                <br></br>
                <span className="ContactRegistrationRequestInformation__EmailValue">
                  {profile && profile.email}
                  {!profile && textNameNotRetained}
                </span>
              </div>
            </div>
            <div className="ContactRegistrationRequestInformation__Row">
              <div className="ContactRegistrationRequestInformation__Label">{labelStatus}</div>
              <div className="ContactRegistrationRequestInformation__Value">
                {status && props[CONTACT_REQUEST_STATES[status]]}
              </div>
            </div>
            <div className="ContactRegistrationRequestInformation__Row">
              <div className="ContactRegistrationRequestInformation__Label">{labelRequestDate}</div>
              <div className="ContactRegistrationRequestInformation__Value">
                {createdTime && formatDate(new Date(createdTime))}
              </div>
            </div>
            <div className="ContactRegistrationRequestInformation__Row">
              <div className="ContactRegistrationRequestInformation__Label">{labelRequestId}</div>
              <div className="ContactRegistrationRequestInformation__Value">{id}</div>
            </div>
            <div className="ContactRegistrationRequestInformation__Row">
              <div className="ContactRegistrationRequestInformation__Label">{labelSite}</div>
              {site.productionURL === null ? (
                <div className="ContactRegistrationRequestInformation__Value">{site.name}</div>
              ) : (
                <Link href={`//${site.productionURL}`}>
                  <div className="ContactRegistrationRequestInformation__Value">{site.productionURL}</div>
                </Link>
              )}
            </div>
            <div className="ContactRegistrationRequestInformation__Row">
              <div className="ContactRegistrationRequestInformation__NotesLabel">{labelNotesFromTheRequester}</div>
              <div className="ContactRegistrationRequestInformation__NotesValue">{requesterComments}</div>
            </div>
          </div>
        </Card>
      )}
    </Styled>
  );
};

ContactRegistrationRequestInformation.propTypes = {
  /**
   * This object is read from the redux state ProfileRepository->contactRequest
   */
  contactRequest: PropTypes.shape({
    profile: PropTypes.shape({
      firstName: PropTypes.string,
      lastName: PropTypes.string,
      email: PropTypes.string
    }),
    status: PropTypes.string,
    createdTime: PropTypes.string,
    id: PropTypes.string,
    site: PropTypes.string,
    requesterComments: PropTypes.string
  })
};

ContactRegistrationRequestInformation.defaultProps = {
  contactRequest: {}
};
export default ContactRegistrationRequestInformation;
