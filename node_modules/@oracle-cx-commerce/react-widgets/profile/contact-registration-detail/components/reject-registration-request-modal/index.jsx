/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React, {useRef, useCallback} from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import Modal from '@oracle-cx-commerce/react-components/modal';
import Form from '@oracle-cx-commerce/react-components/form';
import css from '@oracle-cx-commerce/react-widgets/profile/contact-registration-detail/components/reject-registration-request-modal/styles.css';
import PropTypes from 'prop-types';

/**
 * This component is used to display the Approve registration request modal
 *
 * @param props
 */
const RejectRegistrationRequestModal = props => {
  const {
    headingRejectConfirmation,
    textRejectRequestDialogDescription,
    textRejectDialogPlaceholder,
    labelCancel,
    actionReject,
    showRejectModal,
    registrationId,
    handleUpdateContactRegistrationRequestAction,
    closeApproveRejectModal,
    textApprovedRejectRequestCommentsHeader,
    closeRegistrationRequestModalAltText,
    cssOverride
  } = props;

  const commentsText = useRef('');

  const onCancel = useCallback(() => {
    closeApproveRejectModal();
  }, [closeApproveRejectModal]);

  const onReject = event => {
    const actionName = 'rejectContactRegistrationRequest';
    const payload = {
      contactRequestId: registrationId,
      approverComments: commentsText.current ? commentsText.current.value : ''
    };
    handleUpdateContactRegistrationRequestAction(actionName, payload, event);
  };

  return (
    <Styled id="RejectRegistrationRequestModal" css={css}>
      <>
        <Modal
          show={showRejectModal}
          onClose={onCancel}
          closeIconTitle={'close'}
          title={headingRejectConfirmation}
          closeAriaLabel={closeRegistrationRequestModalAltText}
          cssOverride={cssOverride}
        >
          <Form onSubmit={onReject} noValidate>
            <div className="RejectRegistrationRequestModal">
              <div className="ConfimationModal__Body">
                <div className="ConfimationModal__BodyMessage">
                  <div> {textRejectRequestDialogDescription}</div>
                  <br></br>
                  <div> {textRejectDialogPlaceholder}</div>
                </div>
              </div>
              <div className="RejectRegistrationRequestModal__TextArea">
                <label htmlFor="RejectRegistrationRequestModal-id">{textApprovedRejectRequestCommentsHeader}</label>
                <textarea
                  id="RejectRegistrationRequestModal-id"
                  name="RejectRegistrationRequestModal-id"
                  aria-label={textApprovedRejectRequestCommentsHeader}
                  ref={commentsText}
                  data-testid="RejectRegistrationRequestModal-id"
                  maxLength="1000"
                  autoCapitalize="sentences"
                ></textarea>
              </div>
              <div className="ConfimationModal__Footer">
                <button
                  type="submit"
                  className="ConfimationModal__SaveButton"
                  name="reject-button"
                  aria-label={actionReject}
                  onClick={onReject}
                >
                  {actionReject}
                </button>
                <button
                  type="button"
                  className="secondary ConfimationModal__CancelButton"
                  name="cancel-button"
                  aria-label={labelCancel}
                  onClick={onCancel}
                >
                  {labelCancel}
                </button>
              </div>
            </div>
          </Form>
        </Modal>
      </>
    </Styled>
  );
};

RejectRegistrationRequestModal.propTypes = {
  /**
   * Boolean flag to show the modal or hide the modal
   */
  showRejectModal: PropTypes.bool,
  /**
   * The registration id which is used in the URL
   */
  registrationId: PropTypes.string.isRequired,
  /**
   * Callback method which is invoked upon selecting a Reject button
   * from the reject confirmation modal.
   */
  handleUpdateContactRegistrationRequestAction: PropTypes.func.isRequired,
  /**
   * Callback method which is invoked upon closing the accept confirmation modal
   */
  closeApproveRejectModal: PropTypes.func.isRequired,
  /**
   * String for the CSS override of the modal
   */
  cssOverride: PropTypes.string.isRequired
};

RejectRegistrationRequestModal.defaultProps = {
  showRejectModal: 'false'
};

export default RejectRegistrationRequestModal;
