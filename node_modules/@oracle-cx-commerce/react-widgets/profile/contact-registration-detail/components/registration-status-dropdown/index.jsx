/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React, {useCallback} from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import Dropdown from '@oracle-cx-commerce/react-components/dropdown';
import DropdownArrowIcon from '@oracle-cx-commerce/react-components/icons/dropdown-arrow';
import css from '@oracle-cx-commerce/react-widgets/profile/contact-registration-detail/components/registration-status-dropdown/styles.css';
import PropTypes from 'prop-types';

/**
 * This component is used to display the various registration request state.
 * @param props
 */
const RegistrationStatusDropdown = props => {
  const {
    onRegistrationStatusChange,
    textRegistrationRequestAccept,
    textRegistrationRequestsNew,
    textRegistrationRequestsReview,
    textRegistrationRequestReject,
    textMoreInfoRequired,
    labelAriaFilterText,
    selectedRegistrationStatus,
    labelStatusWithoutDelimiter
  } = props;

  const registrationStatuses = [
    {id: 1, value: 'accept', name: textRegistrationRequestAccept},
    {id: 2, value: 'new', name: textRegistrationRequestsNew},
    {id: 3, value: 'review', name: textRegistrationRequestsReview},
    {id: 4, value: 'reject', name: textRegistrationRequestReject},
    {id: 5, value: 'moreInfoNeeded', name: textMoreInfoRequired}
  ];

  const handleValueChange = useCallback(
    selectValue => {
      onRegistrationStatusChange(selectValue);
    },
    [onRegistrationStatusChange]
  );

  /**
   * When the status is moreInfoNeeded, then New status is not allowed.
   * So filtering out the New status from the list.
   */
  const getRegistrationStatuses = () => {
    if (selectedRegistrationStatus === 'moreInfoNeeded') {
      return registrationStatuses.filter(registrationStatus => {
        return registrationStatus.value !== 'new';
      });
    }

    return registrationStatuses;
  };

  return (
    <Styled id="RegistrationStatusDropdown" css={css}>
      <Dropdown
        className={'RegistrationStatusDropdown__DropDown'}
        id="RegistrationStatusDropdown-id"
        onChange={e => handleValueChange(e.target.value)}
        value={selectedRegistrationStatus}
        aria-label={labelAriaFilterText}
        data-testid="RegistrationStatusDropdown-id"
        name="RegistrationStatusDropdown"
        label={labelStatusWithoutDelimiter}
        icon={
          <div>
            <div className="RegistrationStatusDropdown__ArrowIconContainer">
              <DropdownArrowIcon className="RegistrationStatusDropdown__DownArrowIcon"></DropdownArrowIcon>
            </div>
          </div>
        }
      >
        {getRegistrationStatuses().map(registrationStatus => (
          <option key={registrationStatus.id} value={registrationStatus.value}>
            {registrationStatus.name}
          </option>
        ))}
      </Dropdown>
    </Styled>
  );
};

RegistrationStatusDropdown.propTypes = {
  /**
   * A callback function which is listens to the change in state value and sets the current status
   * in the drop-down as that value
   */
  onRegistrationStatusChange: PropTypes.func.isRequired,
  /**
   * value of contact request status
   */
  selectedRegistrationStatus: PropTypes.string.isRequired
};
export default React.memo(RegistrationStatusDropdown);
