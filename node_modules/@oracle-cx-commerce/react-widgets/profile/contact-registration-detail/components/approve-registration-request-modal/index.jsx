/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React, {useCallback, useRef} from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import Modal from '@oracle-cx-commerce/react-components/modal';
import Form from '@oracle-cx-commerce/react-components/form';
import css from '@oracle-cx-commerce/react-widgets/profile/contact-registration-detail/components/approve-registration-request-modal/styles.css';
import PropTypes from 'prop-types';

/**
 * This component is used to display the Approve registration request modal
 *
 * @param props
 */
const ApproveRegistrationRequestModal = props => {
  const {
    headingAcceptConfirmation,
    textAcceptRequestDialogDescription,
    textAcceptDialogPlaceholder,
    labelCancel,
    actionAccept,
    showApproveModal = false,
    registrationId,
    handleUpdateContactRegistrationRequestAction,
    closeApproveRejectModal,
    textApprovedRejectRequestCommentsHeader,
    closeRegistrationRequestModalAltText,
    cssOverride
  } = props;

  const commentsText = useRef('');

  const onCancel = useCallback(() => {
    closeApproveRejectModal();
  }, [closeApproveRejectModal]);

  const onApprove = event => {
    const actionName = 'approveContactRegistrationRequest';
    const payload = {
      contactRequestId: registrationId,
      approverComments: commentsText.current ? commentsText.current.value : ''
    };
    handleUpdateContactRegistrationRequestAction(actionName, payload, event);
  };

  return (
    <Styled id="ApproveRegistrationRequestModal" css={css}>
      <Modal
        show={showApproveModal}
        onClose={onCancel}
        closeIconTitle={'close'}
        title={headingAcceptConfirmation}
        closeArialLabel={closeRegistrationRequestModalAltText}
        cssOverride={cssOverride}
      >
        <Form onSubmit={onApprove} noValidate>
          <div className="ApproveRegistrationRequestModal">
            <div className="ConfimationModal__Body">
              <div className="ConfimationModal__BodyMessage">
                <div> {textAcceptRequestDialogDescription}</div>
                <br />
                <div> {textAcceptDialogPlaceholder}</div>
              </div>
            </div>
            <div className="ApproveRegistrationRequestModal__TextArea">
              <label htmlFor="ApproveRegistrationRequestModal-id">{textApprovedRejectRequestCommentsHeader}</label>
              <textarea
                id="ApproveRegistrationRequestModal-id"
                name="ApproveRegistrationRequestModal-id"
                ref={commentsText}
                aria-label={textApprovedRejectRequestCommentsHeader}
                data-testid="ApproveRegistrationRequestModal-id"
                maxLength="1000"
                autoCapitalize="sentences"
              ></textarea>
            </div>
            <div className="ConfimationModal__Footer">
              <button
                type="submit"
                className="ConfimationModal__SaveButton"
                aria-label={actionAccept}
                onClick={onApprove}
              >
                {actionAccept}
              </button>
              <button
                type="button"
                className="secondary ConfimationModal__CancelButton"
                aria-label={labelCancel}
                onClick={onCancel}
              >
                {labelCancel}
              </button>
            </div>
          </div>
        </Form>
      </Modal>
    </Styled>
  );
};

ApproveRegistrationRequestModal.propTypes = {
  /**
   * Boolean flag to show the modal or hide the modal
   */
  showApproveModal: PropTypes.bool,
  /**
   * The registration id which is used in the URL
   */
  registrationId: PropTypes.string.isRequired,
  /**
   * Callback method which is invoked upon selecting a Accept button
   * from the Accept confirmation modal.
   */
  handleUpdateContactRegistrationRequestAction: PropTypes.func.isRequired,
  /**
   * Callback method which is invoked upon closing the accept confirmation modal
   */
  closeApproveRejectModal: PropTypes.func.isRequired,
  /**
   * String for the CSS override of the modal
   */
  cssOverride: PropTypes.string.isRequired
};

ApproveRegistrationRequestModal.defaultProps = {
  showApproveModal: false
};
export default ApproveRegistrationRequestModal;
