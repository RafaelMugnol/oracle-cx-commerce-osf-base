/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {
  ProfileReturnRequestItemsTableHeader,
  ReturnItemImage,
  ReturnItemName,
  ReturnItemPrice,
  ReturnItemQuantity,
  ReturnItemReason,
  ReturnItemVariants
} from '@oracle-cx-commerce/react-widgets/profile/profile-return-request-items/components/return-item-details';
import React, {useContext} from 'react';
import {ReturnContext, ReturnItemContext} from '@oracle-cx-commerce/react-widgets/contexts';

import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/profile-return-request-items/styles.css';
import CartAddOnItems from '@oracle-cx-commerce/react-widgets/cart/cart-item-details/components/cart-add-on-items';

/* 
  This widget displays the line items of a return request. It is used in returns summary and return details container widgets.
*/
const ProfileReturnRequestItems = props => {
  const {returnDetails = {}, showReturnReason} = useContext(ReturnContext);
  const {
    alertPriceUnavailable,
    labelReturnReason,
    labelReturnQuantity,
    textVariantName,
    messageAtTheRate,
    showAddOnItems = true
  } = props;
  const returnItems = returnDetails.returnItems || [];
  const {orderInfo = {}} = returnDetails;
  const {currencyCode} = orderInfo.priceInfo;
  const {locale} = orderInfo.priceListGroup;
  const priceListGroup = {
    locale,
    currency: {currencyCode}
  };

  // Filter add ons
  const filterAddOns = childItems => {
    return childItems.filter(item => item.addOnItem === true);
  };

  const displayAddOnItems = childItems => {
    const addOnItems = filterAddOns(childItems);

    return (
      <div className="ProfileReturnRequestItem__AddOns">
        {addOnItems.length > 0 && (
          <CartAddOnItems {...props} addOnItems={addOnItems} isEditable={false} isChildItem={false}></CartAddOnItems>
        )}
      </div>
    );
  };

  //iterate over all return line items to get the details of them.
  const returnLineItems = returnItems.map(returnItem => {
    return (
      <div className="ProfileReturnRequestItem" key={returnItem.catRefId}>
        <ReturnItemContext.Provider value={{returnItem, priceListGroup}}>
          <div className="ProfileReturnRequestItem__Details">
            <ReturnItemImage />
            <div className="ProfileReturnRequestItem__ProductDetails">
              <ReturnItemName />
              <ReturnItemVariants textVariantName={textVariantName} />
              <div className="ProfileReturnRequestItem__MobileVisible">
                <ReturnItemPrice alertPriceUnavailable={alertPriceUnavailable} messageAtTheRate={messageAtTheRate} />
              </div>
            </div>
            <div className="ProfileReturnRequestItem__DesktopVisible">
              <ReturnItemPrice alertPriceUnavailable={alertPriceUnavailable} messageAtTheRate={messageAtTheRate} />
            </div>
            <ReturnItemQuantity labelReturnQuantity={labelReturnQuantity} />
          </div>
          {showAddOnItems && returnItem.childItems && displayAddOnItems(returnItem.childItems)}
          {/* render the return reason only if parent needs it. Currently only return details needs it. */}
          {showReturnReason ? <ReturnItemReason labelReturnReason={labelReturnReason} /> : null}
        </ReturnItemContext.Provider>
      </div>
    );
  });

  return (
    <Styled id="ProfileReturnRequestItems" css={css}>
      <div className="ProfileReturnRequestItems">
        <div className="ProfileReturnRequestItems__Header">
          <ProfileReturnRequestItemsTableHeader {...props} />
        </div>
        {returnLineItems}
      </div>
    </Styled>
  );
};

export default ProfileReturnRequestItems;
