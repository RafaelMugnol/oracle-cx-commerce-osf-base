/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {useCallback, useState} from 'react';

import AccountDropdown from '@oracle-cx-commerce/react-widgets/profile/account-picker/components/account-dropdown';
import Modal from '@oracle-cx-commerce/react-components/modal';
import PropTypes from 'prop-types';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/account-picker/components/organization-select-modal/styles.css';

/**
 * This component is used to display the list of organization and search filter
 *
 * @param props
 */
const OrganizationSelectorModal = props => {
  const {currentOrganizationId, show, onClose, labelSelectAccount, closeLinkAltText, cssOverride} = props;

  const [curOrgId, setCurOrgId] = useState(currentOrganizationId);

  const handleOrganizationChange = useCallback(value => {
    setCurOrgId(value);
  }, []);

  const closeModal = useCallback(() => {
    onClose();
  }, [onClose]);

  return (
    <Styled id="OrganizationSelectorModal" css={css}>
      <Modal
        cssOverride={cssOverride}
        show={show}
        onClose={closeModal}
        title={labelSelectAccount}
        closeIconTitle={closeLinkAltText}
        closeAriaLabel={closeLinkAltText}
      >
        <AccountDropdown onOrganizationChange={handleOrganizationChange} currentOrganizationId={curOrgId} {...props} />
      </Modal>
    </Styled>
  );
};

OrganizationSelectorModal.propTypes = {
  /**
   * The current Organization id of the b2b user
   */
  currentOrganizationId: PropTypes.string.isRequired,
  /**
   * The organizationLists  object from redux state(ProfileRepository->organizations)
   */
  organizationLists: PropTypes.arrayOf(
    PropTypes.shape({
      /**
       * Organization Id
       */
      repositoryId: PropTypes.string.isRequired,
      /**
       * Used to indicate the name of the organization
       */
      name: PropTypes.string.isRequired
    })
  ),
  /**
   * Boolean to indicate to show the modal
   */
  show: PropTypes.bool,
  /**
   * callback invoked on closing the modal
   */
  onClose: PropTypes.func.isRequired,
  /**
   * allow css override value
   */
  cssOverride: PropTypes.string
};

OrganizationSelectorModal.defaultProps = {
  organizationLists: [],
  show: false,
  cssOverride: ''
};

export default OrganizationSelectorModal;
