/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {StoreContext} from '@oracle-cx-commerce/react-ui/contexts';
/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React, {useContext} from 'react';
import {getBaseURL, t} from '@oracle-cx-commerce/utils/generic';
import {getWishList} from '@oracle-cx-commerce/commerce-utils/selector/wishlists';
import {useSelector} from '@oracle-cx-commerce/react-components/provider';
import EmailIcon from '@oracle-cx-commerce/react-components/icons/email';
import FacebookIcon from '@oracle-cx-commerce/react-components/icons/facebook';
import PinterestIcon from '@oracle-cx-commerce/react-components/icons/pinterest';
import Styled from '@oracle-cx-commerce/react-components/styled';
import TwitterIcon from '@oracle-cx-commerce/react-components/icons/twitter';
import css from '@oracle-cx-commerce/react-widgets/profile/profile-wish-list-social-sharing/components/profile-wish-list-social-sharing-portal/styles.css';
import {getRequestContext, getProductionFacebook} from '@oracle-cx-commerce/commerce-utils/selector';
import PropTypes from 'prop-types';

// configurable
const PINTEREST_WIN_TITLE = 'pinterestWindow';
const TWITTER_WIN_TITLE = 'twitterWindow';
const FACEBOOK_WIN_TITLE = 'facebookWin';
const SHARING_WINDOW_WIDTH = '720';
const SHARING_WINDOW_HEIGHT = '500';

const ProfileWishListSocialSharingPortal = props => {
  // context
  const {getState} = useContext(StoreContext);
  const {page: route = '', productId = ''} = getRequestContext(getState());

  const wishList = useSelector(getWishList, {id: productId});
  const {spaceName: wishlistName = ''} = wishList;
  const {applicationId: facebookAppId = ''} = getProductionFacebook(getState());

  const {
    // Facebook
    labelShareOnFacebook,
    displayFacebook = true,
    actionShareOnFacebook,
    facebookURL,
    // Pinterest
    labelShareOnPinterest,
    displayPinterest = true,
    actionShareOnPinterest,
    pinterestURL,
    textWishlistPinterestShare,
    // Twitter
    labelShareOnTwitter,
    displayTwitter = true,
    actionShareOnTwitter,
    twitterURL,
    textWishlistTwitterShare,
    // Email
    labelShareByEmail,
    displayEmail = true,
    actionShareByEmail,
    textWishlistEmailSubject,
    textWishlistEmailBodyPara1
  } = props;

  // const [showShareOptions, setShowShareOptions] = useState(false);
  const twitterTextEncoded = encodeURIComponent(textWishlistTwitterShare);
  const pinterestTextEncoded = encodeURIComponent(textWishlistPinterestShare);
  const SHARING_WINDOW_PROPS = `width=${SHARING_WINDOW_WIDTH}, height=${SHARING_WINDOW_HEIGHT}`;

  // helpers

  /**
   * Returns absolute wishlist URL
   */
  const getWishlistURL = () => {
    return `${getBaseURL({window})}/${route}` || '';
  };

  /**
   * Returns encoded absolute wishlist URL
   */
  const getWishlistURLEncoded = () => {
    return encodeURIComponent(getWishlistURL());
  };

  /**
   * Handler to share wishlist on Pinterest
   */
  const shareOnPinterest = () => {
    const pinterestText = t(pinterestTextEncoded, {wishlistName});
    const pinterestWin = window.open(
      t(pinterestURL, {
        wishlistURL: getWishlistURLEncoded(),
        textWishlistPinterestShare: pinterestText
      }),
      PINTEREST_WIN_TITLE,
      SHARING_WINDOW_PROPS
    );

    if (pinterestWin) {
      pinterestWin.focus();
    }
  };

  /**
   * Handler to share wishlist on Twitter
   */
  const shareOnTwitter = () => {
    const twitterText = t(twitterTextEncoded, {wishlistName});
    const twitterWin = window.open(
      t(twitterURL, {textWishlistTwitterShare: twitterText, wishlistURL: getWishlistURLEncoded()}),
      TWITTER_WIN_TITLE,
      SHARING_WINDOW_PROPS
    );

    if (twitterWin) {
      twitterWin.focus();
    }
  };

  /**
   * Handler to share wishlist on Facebook
   */
  const shareOnFacebook = () => {
    const facebookWin = window.open(
      t(facebookURL, {facebookAppId, wishlistURL: getWishlistURLEncoded()}),
      FACEBOOK_WIN_TITLE,
      SHARING_WINDOW_PROPS
    );
    if (facebookWin) {
      facebookWin.focus();
    }
  };

  /**
   * Handler to share wishlist by email
   */
  const shareByEmail = () => {
    const subjectText = t(textWishlistEmailSubject, {wishlistName}) || '';
    const bodyText = `${t(textWishlistEmailBodyPara1, {wishlistName, wishListURL: getWishlistURL()}) || ''}}`;
    window.location.href = `mailto:?subject=${encodeURIComponent(subjectText)}&body=${encodeURIComponent(bodyText)}`;
  };

  /**
   * Generic Handler to share a wishlist on social media.
   *
   * @param {object} props
   */
  const WishlistShare = props => {
    const {classes = '', onClick, title, label, children} = props;

    return (
      <button className={classes} onClick={onClick} type="button" aria-label={title} title={title}>
        {children}
        <span>{label}</span>
      </button>
    );
  };

  return (
    <Styled id="ProfileWishListSocialSharingPortal" css={css}>
      <div className="ProfileWishListSocialSharingPortal__Main">
        <div className="ProfileWishListSocialSharingPortal__Icons">
          {displayFacebook && (
            <WishlistShare
              classes="ProfileWishListSocialSharingPortal__Icon ProfileWishListSocialSharingPortal__FacebookIcon"
              onClick={shareOnFacebook}
              title={actionShareOnFacebook}
              label={labelShareOnFacebook}
            >
              <FacebookIcon />
            </WishlistShare>
          )}
          {displayPinterest && (
            <WishlistShare
              classes="ProfileWishListSocialSharingPortal__Icon ProfileWishListSocialSharingPortal__PinterestIcon"
              onClick={shareOnPinterest}
              title={actionShareOnPinterest}
              label={labelShareOnPinterest}
            >
              <PinterestIcon />
            </WishlistShare>
          )}
          {displayTwitter && (
            <WishlistShare
              classes="ProfileWishListSocialSharingPortal__Icon ProfileWishListSocialSharingPortal__TwitterIcon"
              onClick={shareOnTwitter}
              title={actionShareOnTwitter}
              label={labelShareOnTwitter}
            >
              <TwitterIcon />
            </WishlistShare>
          )}
          {displayEmail && (
            <WishlistShare
              classes="ProfileWishListSocialSharingPortal__Icon ProfileWishListSocialSharingPortal__EmailIcon"
              onClick={shareByEmail}
              title={actionShareByEmail}
              label={labelShareByEmail}
            >
              <EmailIcon />
            </WishlistShare>
          )}
        </div>
      </div>
    </Styled>
  );
};

ProfileWishListSocialSharingPortal.propTypes = {
  /*
   * Boolean to display email sharing.
   */
  displayEmail: PropTypes.bool,
  /*
   * Boolean to display Facebook sharing.
   */
  displayFacebook: PropTypes.bool,
  /*
   * Boolean to display Pinterest sharing.
   */
  displayPinterest: PropTypes.bool,
  /*
   * Boolean to display Twitter sharing.
   */
  displayTwitter: PropTypes.bool,
  /*
   * Facebook URL to share.
   */
  facebookURL: PropTypes.string,
  /*
   * Pinterest URL to share.
   */
  pinterestURL: PropTypes.string,
  /*
   * Twitter URL to share.
   */
  twitterURL: PropTypes.string
};

ProfileWishListSocialSharingPortal.defaultProps = {
  displayEmail: true,
  displayFacebook: true,
  displayPinterest: true,
  displayTwitter: true,
  facebookURL: undefined,
  pinterestURL: undefined,
  twitterURL: undefined
};

export default ProfileWishListSocialSharingPortal;
