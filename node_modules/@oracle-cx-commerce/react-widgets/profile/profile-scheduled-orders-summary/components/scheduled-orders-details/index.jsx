/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {
  PAGE_SCHEDULED_ORDERS_LINK,
  PAGE_SCHEDULED_ORDER_DETAILS_LINK
} from '@oracle-cx-commerce/commerce-utils/constants';

import CalendarIcon from '@oracle-cx-commerce/react-components/icons/calendar';
import Card from '@oracle-cx-commerce/react-components/card';
import Link from '@oracle-cx-commerce/react-components/link';
import PropTypes from 'prop-types';
import React from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/profile-scheduled-orders-summary/components/scheduled-orders-details/styles.css';
import {useDateFormatter} from '@oracle-cx-commerce/react-components/utils/hooks';

/**
 * Widget to display the scheduled orders details at profile page.
 * @param {Object} props the properties object
 */
const ScheduledOrdersDetails = props => {
  const {actionManage, textScheduledOrders, textUpcomingOrders} = props;
  const {priceListGroup, scheduledOrders, totalScheduledOrders, numberOfUpcomingOrdersToDisplay} = props;
  const options = {year: 'numeric', month: 'long', day: 'numeric'};
  const formatDate = useDateFormatter(options, priceListGroup);

  return (
    <Styled id="ScheduledOrdersDetails" css={css}>
      <Card className="ScheduledOrdersDetails__Card">
        <div className="ScheduledOrdersDetails_Row">
          <div className="ScheduledOrdersDetails__RowItem">
            <div className="ScheduledOrdersDetails__Icon">
              <CalendarIcon />
            </div>
            <div className="ScheduledOrdersDetails__Content">
              <span className="ScheduledOrdersDetails__TotalOrders">{totalScheduledOrders}</span> {textScheduledOrders}
            </div>
          </div>

          <div className="ScheduledOrdersDetails__Manage">
            <Link href={PAGE_SCHEDULED_ORDERS_LINK}>{actionManage}</Link>
          </div>
        </div>
        {scheduledOrders && numberOfUpcomingOrdersToDisplay > 0 && scheduledOrders.length > 0 && (
          <div className="ScheduledOrdersDetails__OrdersDetails">
            <div className="ScheduledOrdersDetails__RowItem">
              <div className="ScheduledOrdersDetails__UpcomingScheduledOrders">{textUpcomingOrders}</div>
            </div>

            {scheduledOrders.map(scheduledOrder => (
              <div key={scheduledOrder.id} className="ScheduledOrdersDetails__OrdersDetails">
                <div className="ScheduledOrdersDetails_Row">
                  <div className="ScheduledOrdersDetails__Id">
                    <Link href={`${PAGE_SCHEDULED_ORDER_DETAILS_LINK}/${scheduledOrder.id}`}>
                      <span className="ScheduledOrdersDetails__IdLink">{scheduledOrder.id}</span>
                    </Link>
                  </div>
                  <div className="ScheduledOrdersDetails__Date">
                    {formatDate(new Date(scheduledOrder.nextScheduledRun))}
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </Card>
    </Styled>
  );
};

ScheduledOrdersDetails.propTypes = {
  /** Currently configured price list group */
  priceListGroup: PropTypes.shape({
    repositoryId: PropTypes.string.isRequired,
    currencyCode: PropTypes.string
  }).isRequired,

  /** List of scheduled orders */
  scheduledOrders: PropTypes.arrayOf(
    PropTypes.shape({
      repositoryId: PropTypes.string.isRequired,
      nextScheduledRun: PropTypes.string.isRequired
    })
  ),

  /** Total number of scheduled orders */
  totalScheduledOrders: PropTypes.number,

  /** Number of upcoming scheduled orders */
  numberOfUpcomingOrdersToDisplay: PropTypes.number
};

ScheduledOrdersDetails.defaultProps = {
  scheduledOrders: [],
  totalScheduledOrders: 0,
  numberOfUpcomingOrdersToDisplay: 5
};

export default ScheduledOrdersDetails;
