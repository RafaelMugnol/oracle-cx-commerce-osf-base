/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import Styled from '@oracle-cx-commerce/react-components/styled';
import React from 'react';
import {isEmptyObject} from '@oracle-cx-commerce/utils/generic';
import {useDateFormatter} from '@oracle-cx-commerce/react-components/utils/hooks';
import css from '@oracle-cx-commerce/react-widgets/profile/contact-registration-requests/components/registration-request-summary/styles.css';
import UserIcon from '@oracle-cx-commerce/react-components/icons/user';
import {CONTACT_REQUEST_STATES} from '@oracle-cx-commerce/react-widgets/profile/contact-registration-requests/utils';
import PropTypes from 'prop-types';

/**
 * This component displays the card information of registration requests.
 * @param {*} props
 */
const RegistrationRequestSummary = props => {
  const {contactRequest, textNameNotRetained, labelRequestId, labelSite, labelRequestDate, labelStatus} = props;
  const {profile, status, createdTime, id, site} = contactRequest;
  const options = {year: 'numeric', month: 'long', day: 'numeric'};
  const formatDate = useDateFormatter({...options});

  return (
    <Styled id="RegistrationRequestSummary" css={css}>
      {!isEmptyObject(contactRequest) && (
        <div className="RegistrationRequestSummary">
          <div className="RegistrationRequestSummary__Container">
            <UserIcon className="RegistrationRequestSummary__ProfileIcon" />
            <div className="RegistrationRequestSummary__FirstNameEmail">
              {profile && `${profile.firstName} ${profile.lastName}`}
              {!profile && textNameNotRetained}
              <br></br>
              <span className="RegistrationRequestSummary__EmailValue">
                {profile && profile.email}
                {!profile && textNameNotRetained}
              </span>
            </div>
          </div>
          <div className="RegistrationRequestSummary__Container">
            <div className="RegistrationRequestSummary__Label">{labelStatus}</div>
            <div className="RegistrationRequestSummary__Value">{status && props[CONTACT_REQUEST_STATES[status]]}</div>
          </div>
          <div className="RegistrationRequestSummary__Container">
            <div className="RegistrationRequestSummary__Label">{labelRequestDate}</div>
            <div className="RegistrationRequestSummary__Value">{createdTime && formatDate(new Date(createdTime))}</div>
          </div>
          <div className="RegistrationRequestSummary__Container">
            <div className="RegistrationRequestSummary__Label">{labelRequestId}</div>
            <div className="RegistrationRequestSummary__Value">{id}</div>
          </div>
          <div className="RegistrationRequestSummary__Container">
            <div className="RegistrationRequestSummary__Label">{labelSite}</div>
            <div className="RegistrationRequestSummary__Value">{site.productionURL || site.name}</div>
          </div>
        </div>
      )}
    </Styled>
  );
};

RegistrationRequestSummary.propTypes = {
  /**
   * The object containing contact request for a particular registration id
   * which is read from the redux state ProfileRepository->contactRequests->id
   */
  contactRequest: PropTypes.shape({
    profile: PropTypes.shape({
      firstName: PropTypes.string,
      lastName: PropTypes.string,
      email: PropTypes.string
    }),
    status: PropTypes.string,
    createdTime: PropTypes.string,
    id: PropTypes.string,
    site: PropTypes.string
  })
};

RegistrationRequestSummary.defaultProps = {
  contactRequest: {}
};
export default RegistrationRequestSummary;
