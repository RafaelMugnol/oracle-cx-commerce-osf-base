/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React, {useCallback} from 'react';
import {isEmptyObject} from '@oracle-cx-commerce/utils/generic';
import {useDateFormatter, useNumberFormatter} from '@oracle-cx-commerce/react-components/utils/hooks';
import {getOrder} from '@oracle-cx-commerce/commerce-utils/selector';
import Link from '@oracle-cx-commerce/react-components/link';
import css from '@oracle-cx-commerce/react-widgets/profile/pending-approval-orders/components/pending-approval-order-summary/styles.css';
import Styled from '@oracle-cx-commerce/react-components/styled';
import CalendarIcon from '@oracle-cx-commerce/react-components/icons/calendar';
import {useSelector} from '@oracle-cx-commerce/react-components/provider';
import PropTypes from 'prop-types';

/**
 * Component to display pending approval order summary.
 *
 * @param props
 */
const PendingApprovalOrderSummary = props => {
  const {
    itemId: orderId,
    labelOrderNumber,
    labelOrderDate,
    labelSubmittedBy,
    textScheduledOrder,
    labelOrderTotal
  } = props;
  const order = useSelector(getOrder, {id: orderId}) || {};
  const {scheduledOrderId, total, creationDate, profile} = order;
  const {firstName, lastName} = profile;
  const formatCurrency = useNumberFormatter({style: 'currency'}, order.priceListGroup);
  const formatDate = useDateFormatter();

  /**
   * This method constructs and returns the order details link.
   */
  const getOrderDetailsLink = useCallback(() => {
    return scheduledOrderId ? `scheduled-order-details/${scheduledOrderId}` : `order-details/${orderId}`;
  }, [scheduledOrderId, orderId]);

  return (
    <Styled id="PendingApprovalOrderSummary" css={css}>
      {!isEmptyObject(order) && (
        <Link className="PendingApprovalOrderSummary__Card" href={getOrderDetailsLink()}>
          <div className="PendingApprovalOrderSummary">
            <div className="PendingApprovalOrderSummary__Container">
              <div className="PendingApprovalOrderSummary__Label">{labelOrderNumber}</div>
              <div className="PendingApprovalOrderSummary__Value">{orderId}</div>
            </div>
            <div className="PendingApprovalOrderSummary__Container">
              <div className="PendingApprovalOrderSummary__Label">{labelOrderTotal}</div>
              <div className="PendingApprovalOrderSummary__Value">{total && formatCurrency(total)}</div>
            </div>
            <div className="PendingApprovalOrderSummary__Container">
              <div className="PendingApprovalOrderSummary__Label">{labelOrderDate}</div>
              <div className="PendingApprovalOrderSummary__Value">{formatDate(new Date(creationDate))}</div>
            </div>
            <div className="PendingApprovalOrderSummary__Container">
              <div className="PendingApprovalOrderSummary__Label">{labelSubmittedBy}</div>
              <div className="PendingApprovalOrderSummary__Value">{`${firstName} ${lastName}`}</div>
            </div>
            {scheduledOrderId && (
              <div className="PendingApprovalOrderSummary__Container">
                <div className="PendingApprovalOrderSummary__Label">
                  <CalendarIcon className={'PendingApprovalOrderSummary__ScheduledOrderIcon'}></CalendarIcon>
                </div>
                <div className="PendingApprovalOrderSummary__Value">{textScheduledOrder}</div>
              </div>
            )}
          </div>
        </Link>
      )}
    </Styled>
  );
};

PendingApprovalOrderSummary.propTypes = {
  /**
   * orderId of the pending approval order.
   */
  itemId: PropTypes.string.isRequired
};

export default PendingApprovalOrderSummary;
