/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import ActiveSwitch from '@oracle-cx-commerce/react-widgets/profile/add-or-edit-account-contact/components/active-switch';
import CancelSaveActions from '@oracle-cx-commerce/react-widgets/profile/add-or-edit-account-contact/components/cancel-save-actions';
import Form from '@oracle-cx-commerce/react-components/form';
import PropTypes from 'prop-types';
import React from 'react';
import RoleOptions from '@oracle-cx-commerce/react-widgets/profile/add-or-edit-account-contact/components/role-options';
import UserNameSection from '@oracle-cx-commerce/react-widgets/profile/add-or-edit-account-contact/components/user-name-section';

/**
 * Component containing add account contact form.
 * @param {Object} props the properties object
 */
const AddAccountContact = props => {
  const {
    labelFirstName,
    labelLastName,
    labelEmailAddress,
    headingAddContact,
    actionSave,
    labelCancel,
    textActive,
    textAllFieldsRequired,
    isActive,
    activeChangeHandler,
    onSaveClick,
    ...otherProps
  } = props;

  return (
    <>
      <div className="AddAccountContact">
        <h1 id="page-heading">{headingAddContact}</h1>
        <Form onSubmit={onSaveClick} setInProgress={false} noValidate className="AddAccountContact__Form">
          <div className="Form">
            <div className="AddAccountContact__AllFieldsRequiredText">{textAllFieldsRequired}</div>
            <UserNameSection
              labelLastName={labelLastName}
              labelFirstName={labelFirstName}
              id="add-contact"
            ></UserNameSection>
            <div className="AddAccountContact__EmailSection">
              <label htmlFor="email-address-add-contact">{labelEmailAddress}</label>
              <input
                id="email-address-add-contact"
                type="email"
                name="email"
                autoComplete="email"
                required
                maxLength="254"
              ></input>
              <span className="validationMessage"></span>
            </div>
            <RoleOptions id="role-select-add-contact" ownProfile={false} {...otherProps} />
            <ActiveSwitch textActive={textActive} activeChangeHandler={activeChangeHandler} isActive={isActive} />
          </div>
          <CancelSaveActions labelCancel={labelCancel} actionSave={actionSave} />
        </Form>
      </div>
    </>
  );
};
AddAccountContact.propTypes = {
  /**
   * Function to submit form on click of save button.
   */
  onSaveClick: PropTypes.func.isRequired,
  /**
   * Flag to indicate Active status of the user whose profile is added.
   */
  isActive: PropTypes.bool.isRequired,
  /**
   * Function to handle onChange event of the active toggle switch.
   */
  activeChangeHandler: PropTypes.func.isRequired,
  /**
   * Roles array containing all the roles of the current organization.
   */
  roles: PropTypes.arrayOf(
    PropTypes.shape({
      function: PropTypes.string.isRequired,
      relativeTo: PropTypes.string.isRequired,
      repositoryId: PropTypes.string.isRequired
    }).isRequired
  ),
  /**
   * Object returned by react useRef hook. It holds reference to the role options in the form
   */
  rolesRef: PropTypes.shape({
    current: PropTypes.object
  })
};
AddAccountContact.defaultProps = {
  roles: [],
  rolesRef: undefined
};
export default AddAccountContact;
