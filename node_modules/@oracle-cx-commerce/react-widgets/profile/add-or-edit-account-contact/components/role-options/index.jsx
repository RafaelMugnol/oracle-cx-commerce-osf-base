/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import CheckIcon from '@oracle-cx-commerce/react-components/icons/check';
import Checkbox from '@oracle-cx-commerce/react-components/checkbox';
import PropTypes from 'prop-types';
import React from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import {convertRolesToDisplayableOptions} from '@oracle-cx-commerce/react-widgets/profile/add-or-edit-account-contact/utils';
import css from '@oracle-cx-commerce/react-widgets/profile/add-or-edit-account-contact/components/role-options/styles.css';

/**
 * Component to display role check boxes.
 * @param {Object} props the properties object
 */
const RoleOptions = props => {
  const {roles, profile, rolesRef, ownProfile, id, labelRoles, labelAriaCheckboxCheckedReadOnly} = props;

  const displayableRoles = convertRolesToDisplayableOptions(roles, props);

  return (
    <Styled id="RoleOptions" css={css}>
      <div ref={rolesRef} id={id} className="RoleOptions__Section">
        <label className="RoleOptions__RoleHeading" htmlFor="edit-account-contact-role-select">
          {labelRoles}
        </label>
        {Object.values(displayableRoles).map(role => {
          if (role.function === 'buyer' || (ownProfile && role.function === 'admin')) {
            return (
              <div key={role.repositoryId}>
                <CheckIcon
                  className="RoleOptions__CheckIcon"
                  data-testid={`checkicon-${role.function}`}
                  aria-label={`${role.display}, ${labelAriaCheckboxCheckedReadOnly}`}
                  tabIndex="0"
                />
                <span className="RoleOptions__CheckedValue">{role.display}</span>
                <Checkbox
                  defaultValue={role.function}
                  name="roles[]"
                  className="RoleOptions__Input--Hidden"
                  defaultChecked={true}
                  labelText={role.display}
                />
              </div>
            );
          }

          return (
            <div key={role.repositoryId}>
              <Checkbox
                key={role.repositoryId}
                className="RoleOptions_Checkbox"
                id={`role-select-${role.repositoryId}`}
                title={role.repositoryId}
                defaultValue={role.function}
                defaultChecked={profile && profile.roles.includes(role.repositoryId)}
                name="roles[]"
                labelText={role.function === 'custom' ? role.name : role.display}
              ></Checkbox>
            </div>
          );
        })}
      </div>
    </Styled>
  );
};
RoleOptions.propTypes = {
  /**
   * Flag to indicate if user is editing his own profile
   */
  ownProfile: PropTypes.bool.isRequired,
  /**
   * Roles array containing all the roles of the current organization.
   */
  roles: PropTypes.arrayOf(
    PropTypes.shape({
      function: PropTypes.string.isRequired,
      relativeTo: PropTypes.string.isRequired,
      repositoryId: PropTypes.string.isRequired
    }).isRequired
  ),
  /**
   * The id attribute value for the base div element.
   */
  id: PropTypes.string,
  /**
   * Object returned by react useRef hook.
   */
  rolesRef: PropTypes.shape({
    current: PropTypes.object
  }),

  /**
   * Profile object (as obtained from redux state ProfileRepository->profiles[profileId]) of the user whose profile has to be edited.
   * It is a required field for edit account contact.
   */
  profile: PropTypes.shape({
    id: PropTypes.string.isRequired,
    firstName: PropTypes.string.isRequired,
    lastName: PropTypes.string.isRequired,
    email: PropTypes.string.isRequired,
    active: PropTypes.bool.isRequired,
    roles: PropTypes.arrayOf(PropTypes.string).isRequired
  })
};
RoleOptions.defaultProps = {
  id: '',
  profile: undefined,
  roles: [],
  rolesRef: undefined
};
export default React.memo(RoleOptions);
