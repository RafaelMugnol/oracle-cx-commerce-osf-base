/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
export const ADMIN = 'admin';
export const allRoles = ['admin', 'accountAddressManager', 'approver', 'profileAddressManager', 'buyer'];
export const defaultRole = {function: 'All Roles', repositoryId: 'All'};

/**
 * Method sorts the input array containing objects on a given input key
 * @param {*} array - array of objects to sort
 * @param {*} key - key to be used for sorting comparison
 */
const sortObjectsByKey = (array, key) => {
  array.sort((option1, option2) => {
    if (option1[key] < option2[key]) return -1;
    if (option1[key] > option2[key]) return 1;

    return 0;
  });
};

/**
 * The method returns a sorted array containing localized values for roles.
 * @param {*} roles - array containing role objects
 * @param {*} localeTranslations - object containing translations for roles
 */
export const convertRolesToDisplayableOptions = (roles, localeTranslations) => {
  const localisedRoles = roles.map(roleObj => {
    return {...roleObj, display: localeTranslations[roleObj.function]};
  });
  sortObjectsByKey(localisedRoles, 'display');

  return localisedRoles;
};

export const isMultipleAccounts = profile => {
  if (
    (profile.parentOrganization != null && profile.secondaryOrganizationsCount > 0) ||
    profile.secondaryOrganizationsCount > 1 ||
    (profile.secondaryOrganizations && profile.secondaryOrganizations.length > 0)
  ) {
    return true;
  }

  return false;
};
