/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React, {Suspense, useContext, useEffect, useMemo, useRef, useState} from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import {StoreContext} from '@oracle-cx-commerce/react-ui/contexts';
import {getAddressManagerRoles} from '@oracle-cx-commerce/react-components/utils/address';
import {connect} from '@oracle-cx-commerce/react-components/provider';
import {getComponentData} from '@oracle-cx-commerce/react-widgets/profile/profile-orders-pending-approval-summary/selectors';
import css from '@oracle-cx-commerce/react-widgets/profile/profile-orders-pending-approval-summary/styles.css';
import PropTypes from 'prop-types';

const OrdersPendingApprovalDetails = React.lazy(() =>
  import(
    '@oracle-cx-commerce/react-widgets/profile/profile-orders-pending-approval-summary/components/orders-pending-approval-details'
  )
);

/**
 * Widget to display the orders pending approval summary at profile page.
 * @param {Object} props the properties object
 */
const ProfileOrdersPendingApprovalSummary = props => {
  const {action} = useContext(StoreContext);
  const {headingOrdersPendingApproval} = props;
  const {roles} = props;
  const [ordersPendingApproval, setOrdersPendingApproval] = useState();
  const actionInvokeRef = useRef(true);
  const profileRoles = useMemo(() => getAddressManagerRoles(roles), [roles]);

  /* Pulls all the orders of current user in pending approval state */
  useEffect(() => {
    if (profileRoles && profileRoles.isApprover && actionInvokeRef.current) {
      actionInvokeRef.current = false;
      action('getAllOrdersForProfile', {
        q: `state eq "pending_approval" OR state eq "pending_approval_template"`
      }).then(response => {
        if (response.ok && response.json && response.json.items) {
          setOrdersPendingApproval(response.json.totalResults);
        }
      });
    }
  }, [action, setOrdersPendingApproval, profileRoles]);

  return (
    profileRoles &&
    profileRoles.isApprover && (
      <Styled id="ProfileOrdersPendingApprovalSummary" css={css}>
        <div className="ProfileOrdersPendingApprovalSummary">
          <h2>{headingOrdersPendingApproval}</h2>
          <Suspense fallback={null}>
            <OrdersPendingApprovalDetails ordersPendingApproval={ordersPendingApproval} {...props} />
          </Suspense>
        </div>
      </Styled>
    )
  );
};

ProfileOrdersPendingApprovalSummary.propTypes = {
  /**
   * The roles (user roles) object from redux state(ProfileRepository->roles)
   */
  roles: PropTypes.objectOf(
    PropTypes.shape({
      repositoryId: PropTypes.string.isRequired,
      function: PropTypes.string.isRequired
    })
  ).isRequired
};

export default connect(getComponentData)(ProfileOrdersPendingApprovalSummary);
