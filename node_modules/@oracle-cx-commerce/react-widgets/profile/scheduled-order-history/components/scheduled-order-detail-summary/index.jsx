/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import Styled from '@oracle-cx-commerce/react-components/styled';
import React from 'react';
import {isEmptyObject} from '@oracle-cx-commerce/utils/generic';
import {useDateFormatter} from '@oracle-cx-commerce/react-components/utils/hooks';
import css from '@oracle-cx-commerce/react-widgets/profile/scheduled-order-history/components/scheduled-order-detail-summary/styles.css';
import {getFrequencyType} from '@oracle-cx-commerce/react-widgets/profile/scheduled-order-history/utils';

const ScheduledOrderDetailSummary = props => {
  const {
    scheduledOrderInfo,
    labelScheduleId,
    labelFrequency,
    labelLastOrderDate,
    labelNextOrderDate,
    labelScheduleStatus
  } = props;
  const {schedule, id, name, lastScheduledRun, nextScheduledRun, state} = scheduledOrderInfo;
  const formatDate = useDateFormatter();

  return (
    <Styled id="ScheduledOrderDetailSummary" css={css}>
      {!isEmptyObject(scheduledOrderInfo) && (
        <div className="ScheduledOrderDetailSummary">
          <div className="ScheduledOrderDetailSummary__Container">
            <div className="ScheduledOrderDetailSummary__ScheduledName">{name}</div>
          </div>

          <div className="ScheduledOrderDetailSummary__Container">
            <div className="ScheduledOrderDetailSummary__Label">{labelScheduleId}:</div>
            <div className="ScheduledOrderDetailSummary__Value">{id}</div>
          </div>

          <div className="ScheduledOrderDetailSummary__Container">
            <div className="ScheduledOrderDetailSummary__Label">{labelFrequency}:</div>
            <div className="ScheduledOrderDetailSummary__Value">{props[getFrequencyType(schedule)]}</div>
          </div>

          {lastScheduledRun && (
            <div className="ScheduledOrderDetailSummary__Container">
              <div className="ScheduledOrderDetailSummary__Label">{labelLastOrderDate}:</div>
              <div className="ScheduledOrderDetailSummary__Value">{formatDate(new Date(lastScheduledRun))}</div>
            </div>
          )}

          {nextScheduledRun && (
            <div className="ScheduledOrderDetailSummary__Container">
              <div className="ScheduledOrderDetailSummary__Label">{labelNextOrderDate}:</div>
              <div className="ScheduledOrderDetailSummary__Value">{formatDate(new Date(nextScheduledRun))}</div>
            </div>
          )}

          <div className="ScheduledOrderDetailSummary__Container">
            <div className="ScheduledOrderDetailSummary__Label">{labelScheduleStatus}:</div>
            <div className="ScheduledOrderDetailSummary__Value ScheduledOrderDetailSummary__CapitalizedValue">
              {state}
            </div>
          </div>
        </div>
      )}
    </Styled>
  );
};

export default ScheduledOrderDetailSummary;
