/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import AddressBookCard from '@oracle-cx-commerce/react-widgets/profile/account-address-book/components/address-book-card';
import css from '@oracle-cx-commerce/react-widgets/profile/account-address-book/components/address-list-view/styles.css';
import PropTypes from 'prop-types';

/**
 * Component to view address information.
 * @param {Object} props the properties object
 */
const AddressListView = props => {
  const {labelNoAddresses} = props;
  const {contactInfos = {}, addressIds = [], itemType, showAddressActions, checkIsProfileAddress} = props;

  return (
    <Styled id="AddressListView" css={css}>
      <div className="AddressListView">
        {contactInfos && addressIds && addressIds.length > 0 ? (
          addressIds.map(listItemId => (
            <AddressBookCard
              key={listItemId}
              itemId={listItemId}
              {...props}
              showMenuPopover={showAddressActions.get(`${itemType}_${listItemId}`)}
              isProfileAddress={checkIsProfileAddress(listItemId)}
            ></AddressBookCard>
          ))
        ) : (
          <div className="AddressListView__NoAddressLabel">
            <span>{labelNoAddresses}</span>
          </div>
        )}
      </div>
    </Styled>
  );
};

AddressListView.propTypes = {
  // eslint-disable-next-line spellcheck/spell-checker
  /**
   * The contactInfos (address) object from redux state(ProfileRepository->contactInfos)
   */
  contactInfos: PropTypes.objectOf(
    PropTypes.shape({
      firstName: PropTypes.string,
      lastName: PropTypes.string,
      address1: PropTypes.string.isRequired,
      city: PropTypes.string.isRequired,
      state: PropTypes.string.isRequired,
      postalCode: PropTypes.string.isRequired,
      country: PropTypes.string.isRequired,
      phoneNumber: PropTypes.string
    })
  ),

  /** Default shipping address */
  addressIds: PropTypes.arrayOf(PropTypes.string),

  /** Text to show address type */
  itemType: PropTypes.string.isRequired,

  /** Flag to show billing address badge */
  checkIsProfileAddress: PropTypes.func.isRequired
};

AddressListView.defaultProps = {
  contactInfos: {},
  addressIds: []
};

export default AddressListView;
