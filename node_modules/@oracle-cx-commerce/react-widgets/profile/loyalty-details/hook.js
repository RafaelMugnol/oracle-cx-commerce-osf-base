/*
 ** Copyright (c) 2021 Oracle and/or its affiliates.
 */
import {useCallback, useEffect, useContext, useRef} from 'react';
import {StoreContext} from '@oracle-cx-commerce/react-ui/contexts';

export const useLoyaltyDetailsInitializer = ({profileId, setShowWidget}) => {
  const {action} = useContext(StoreContext);
  const isFirstRender = useRef(true);
  const paymentType = 'loyaltyPoints';

  /**
   * Call back method to handle when an action response is a failure.
   */
  const onNotOk = useCallback(
    ({error = {}}) => {
      action('notify', {level: 'error', message: error.message});
    },
    [action]
  );

  /**
   * Get loyalty related details by doing inquireBalance action call
   */
  const getLoyaltyDetails = useCallback(() => {
    const payload = {payments: [{type: paymentType, seqNum: '0'}]};
    action('inquireBalance', payload)
      .then(response => {
        if (response.ok !== true) {
          onNotOk(response);
        }
      })
      .catch(error => {
        onNotOk({error});
      })
      .finally(() => setShowWidget(true));
  }, [action, onNotOk, setShowWidget]);

  useEffect(() => {
    if (profileId && isFirstRender.current) {
      isFirstRender.current = false;
      getLoyaltyDetails();
    }
  }, [getLoyaltyDetails, profileId]);
};
