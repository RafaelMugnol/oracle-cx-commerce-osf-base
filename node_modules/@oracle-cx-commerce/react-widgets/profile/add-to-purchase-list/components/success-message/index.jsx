/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {useContext} from 'react';

import Img from '@oracle-cx-commerce/react-components/img';
import Link from '@oracle-cx-commerce/react-components/link';
import {PAGE_PURCHASE_LIST_DETAILS_LINK} from '@oracle-cx-commerce/commerce-utils/constants';
import PropTypes from 'prop-types';
import {StoreContext} from '@oracle-cx-commerce/react-ui/contexts';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/add-to-purchase-list/components/success-message/styles.css';
import {getPurchaseLists} from '@oracle-cx-commerce/commerce-utils/selector';
import {t} from '@oracle-cx-commerce/utils/generic';
import {useNumberFormatter} from '@oracle-cx-commerce/react-components/utils/hooks';

const SuccessMessageSingle = props => {
  const {productSelection, alertPriceUnavailable = ''} = props;
  const {
    productDisplayName = '',
    productSalePrice = 0,
    productThumbImageURL = '',
    productVariantValues = []
  } = productSelection;

  const formatCurrency = useNumberFormatter({style: 'currency'});

  const formatPrice = (price, altPriceMsg) => {
    return price ? formatCurrency(price) : altPriceMsg;
  };

  return (
    <div className="AddToPurchaseListModal__ProductDetailsArea">
      {productThumbImageURL && (
        <Img
          className="AddToPurchaseListModal__ProductImage"
          src={productThumbImageURL}
          alt={productDisplayName}
          title={productDisplayName}
          size="xsmall"
        />
      )}
      <div className="AddToPurchaseListModal__ProductDetails">
        <span className="AddToPurchaseListModal__ProductName">{productDisplayName}</span>
        {productVariantValues && productVariantValues.length > 0 && (
          <div className="AddToPurchaseListModal__ProductVariantDescription">
            {productVariantValues.map(variant => (
              <div key={variant.optionName}>{`${variant.optionName} : ${variant.optionValue}`}</div>
            ))}
          </div>
        )}
      </div>
      <span className="AddToPurchaseListModal__ProductPrice">
        {formatPrice(productSalePrice, alertPriceUnavailable)}
      </span>
    </div>
  );
};

const SuccessMessageMultiple = props => {
  const {messageAddedToPurchaseList = '', productSelection, purchaseListId = ''} = props;

  const {getState} = useContext(StoreContext);

  return (
    <span>
      {t(messageAddedToPurchaseList, {
        count: productSelection.length,
        purchaseListName: getPurchaseLists(getState())[purchaseListId]['name']
      })}
    </span>
  );
};

/**
 * Component to show on success of addition of product to a purchase list
 *
 * @param props
 */
const SuccessMessage = props => {
  const {productSelection = [], purchaseListId = '', actionViewPurchaseList = ''} = props;
  let successMessage = null;

  if (Array.isArray(productSelection) && productSelection.length === 1) {
    // Single product selected from multiple choices
    successMessage = <SuccessMessageSingle {...props} productSelection={productSelection[0]}></SuccessMessageSingle>;
  } else if (Array.isArray(productSelection) && productSelection.length > 1) {
    // Multiple products selected from multiple choices
    successMessage = <SuccessMessageMultiple {...props} productSelection={productSelection}></SuccessMessageMultiple>;
  } else {
    // Single product selected
    successMessage = <SuccessMessageSingle {...props} productSelection={productSelection}></SuccessMessageSingle>;
  }

  return (
    <Styled id="AddToPurchaseListModal__SuccessMessage" css={css}>
      <div
        className="AddToPurchaseListModal__SuccessMessage"
        role="region"
        aria-labelledby="AddToPurchaseListModal__Header"
      >
        {successMessage}
        <Link
          className="AddToPurchaseListModal__ViewPurchaseList"
          href={`${PAGE_PURCHASE_LIST_DETAILS_LINK}/${purchaseListId}`}
        >
          {actionViewPurchaseList}
        </Link>
      </div>
    </Styled>
  );
};

SuccessMessage.propTypes = {
  /** List of product information that need to be added to the purchase list */
  productSelection: PropTypes.oneOfType([
    PropTypes.arrayOf(
      PropTypes.shape({
        /** The id of the product */
        productId: PropTypes.string.isRequired,
        /** The sku id of the variant */
        skuId: PropTypes.string.isRequired,
        /** Display name of the product */
        productDisplayName: PropTypes.string,
        /** Sale price of the product variant */
        productSalePrice: PropTypes.number,
        /** Thumbnail image URI of the product variant */
        productThumbImageURL: PropTypes.string,
        /** Product variant property values */
        productVariantValues: PropTypes.arrayOf(
          PropTypes.shape({
            /** The variant type of the product */
            optionName: PropTypes.string.isRequired,
            /** The variant value of the product */
            optionValue: PropTypes.string.isRequired
          })
        ),
        /** Quantity to be added in the purchase list */
        quantity: PropTypes.number
      }).isRequired
    ).isRequired,
    PropTypes.shape({
      /** The id of the product */
      productId: PropTypes.string.isRequired,
      /** The sku id of the variant */
      skuId: PropTypes.string.isRequired,
      /** Display name of the product */
      productDisplayName: PropTypes.string,
      /** Sale price of the product variant */
      productSalePrice: PropTypes.number,
      /** Thumbnail image URI of the product variant */
      productThumbImageURL: PropTypes.string,
      /** Product variant property values */
      productVariantValues: PropTypes.arrayOf(
        PropTypes.shape({
          /** The variant type of the product */
          optionName: PropTypes.string.isRequired,
          /** The variant value of the product */
          optionValue: PropTypes.string.isRequired
        })
      ),
      /** Quantity to be added in the purchase list */
      quantity: PropTypes.number
    }).isRequired
  ]).isRequired,
  /** The id of the purchase list where the item(s) got added */
  purchaseListId: PropTypes.string.isRequired
};

SuccessMessage.defaultProps = {};

export default SuccessMessage;
