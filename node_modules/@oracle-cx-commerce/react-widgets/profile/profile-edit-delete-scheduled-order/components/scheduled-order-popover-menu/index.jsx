/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React, {Suspense, useState, useCallback} from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/profile-edit-delete-scheduled-order/components/scheduled-order-popover-menu/styles.css';
import EditScheduledOrderModal from '@oracle-cx-commerce/react-widgets/profile/profile-edit-delete-scheduled-order/components/edit-scheduled-order';
import DeleteScheduledOrderModal from '@oracle-cx-commerce/react-widgets/profile/profile-edit-delete-scheduled-order/components/delete-scheduled-order';

const ScheduledOrderPopoverMenu = props => {
  const {textDeleteScheduledOrder, textEditSchedule, setShowPopoverMenu} = props;
  const [showDeleteModal, setShowDeleteModal] = useState(false);
  const [showEditModal, setShowEditModal] = useState(false);

  const clickDelete = () => {
    setShowDeleteModal(true);
  };
  const closeDeleteModal = useCallback(() => {
    setShowDeleteModal(false);
  }, []);

  const clickEdit = () => {
    setShowEditModal(true);
  };
  const closeEditModal = useCallback(() => {
    setShowEditModal(false);
  }, []);

  const ScheduleMenu = props => {
    const {classes = '', onClick, title, label, children} = props;

    return (
      <button className={classes} onClick={onClick} type="button" aria-label={title} title={title}>
        {children}
        <span>{label}</span>
      </button>
    );
  };

  return (
    <Styled id="ScheduledOrderPopoverMenu" css={css}>
      <div className="ScheduledOrderPopoverMenu__PopoverMain">
        <div className="ScheduledOrderPopoverMenu__Icons">
          <ScheduleMenu
            classes="ScheduledOrderPopoverMenu__Icons"
            onClick={clickEdit}
            title={textEditSchedule}
            label={textEditSchedule}
          ></ScheduleMenu>
        </div>
        <div className="ScheduledOrderPopoverMenu__Icons">
          <ScheduleMenu
            classes="ScheduledOrderPopoverMenu__Icons"
            onClick={clickDelete}
            title={textDeleteScheduledOrder}
            label={textDeleteScheduledOrder}
          ></ScheduleMenu>
        </div>
      </div>

      <Suspense fallback={null}>
        <DeleteScheduledOrderModal
          setShowPopoverMenu={setShowPopoverMenu}
          closeDeleteModal={closeDeleteModal}
          showDeleteModal={showDeleteModal}
          {...props}
        ></DeleteScheduledOrderModal>
      </Suspense>

      <Suspense fallback={null}>
        <EditScheduledOrderModal
          setShowPopoverMenu={setShowPopoverMenu}
          closeEditModal={closeEditModal}
          showEditModal={showEditModal}
          {...props}
        ></EditScheduledOrderModal>
      </Suspense>
    </Styled>
  );
};

export default ScheduledOrderPopoverMenu;
