/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {ContainerContext, OrderContext} from '@oracle-cx-commerce/react-ui/contexts';
import React, {Suspense, useCallback, useContext, useState} from 'react';

import DeleteScheduledOrderModal from '@oracle-cx-commerce/react-widgets/profile/profile-edit-delete-scheduled-order/components/delete-scheduled-order';
import EditScheduledOrderModal from '@oracle-cx-commerce/react-widgets/profile/profile-edit-delete-scheduled-order/components/edit-scheduled-order';
import MoreHorizontalIcon from '@oracle-cx-commerce/react-components/icons/more-horizontal-icon';
import Popover from '@oracle-cx-commerce/react-components/popover';
import ScheduledOrderPopoverMenu from '@oracle-cx-commerce/react-widgets/profile/profile-edit-delete-scheduled-order/components/scheduled-order-popover-menu';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/profile-edit-delete-scheduled-order/styles.css';

/**
 * Widget to provide edit and delete options for scheduled order
 */
const ProfileEditDeleteScheduledOrder = props => {
  const {closeLinkAltText, textDeleteScheduledOrder, textEditSchedule} = props;
  const [showPopoverMenu, setShowPopoverMenu] = useState(false);
  const [showDeleteModal, setShowDeleteModal] = useState(false);
  const [showEditModal, setShowEditModal] = useState(false);

  const closeDeleteModal = useCallback(() => {
    setShowDeleteModal(false);
  }, []);

  const closeEditModal = useCallback(() => {
    setShowEditModal(false);
  }, []);

  const scheduledOrder = useContext(ContainerContext);
  const order = useContext(OrderContext);
  const {id, name} = scheduledOrder;

  return (
    <Styled id="ProfileEditDeleteScheduledOrder" css={css}>
      {order.state !== 'PENDING_APPROVAL_TEMPLATE' && (
        <div className="ProfileEditDeleteScheduledOrder__Row">
          <div className="ProfileEditDeleteScheduledOrder__Name">
            <h1>{name}</h1>
          </div>
          <div className="ProfileEditDeleteScheduledOrder__Settings">
            <div className="ProfileEditDeleteScheduledOrder__MobileSettings">
              {id && (
                <div className="ProfileEditDeleteScheduledOrder_Mobile">
                  <button
                    className="ProfileEditDeleteScheduledOrder__PrimaryIcon"
                    onClick={() => setShowPopoverMenu(!showPopoverMenu)}
                    type="button"
                    aria-label="Show More"
                  >
                    <MoreHorizontalIcon />
                  </button>

                  {showPopoverMenu && typeof window !== 'undefined' && (
                    <Suspense fallback={null}>
                      <Popover
                        show={showPopoverMenu}
                        onClose={() => setShowPopoverMenu(false)}
                        closeIconTitle={closeLinkAltText}
                      >
                        <ScheduledOrderPopoverMenu setShowPopoverMenu={setShowPopoverMenu} {...props} />
                      </Popover>
                    </Suspense>
                  )}
                </div>
              )}
            </div>

            <div className="ProfileEditDeleteScheduledOrder__DesktopSettings">
              {id && (
                <div className="ProfileEditDeleteScheduledOrder">
                  <div className="ProfileEditDeleteScheduledOrder_Link">
                    <button
                      onClick={() => setShowEditModal(!showEditModal)}
                      onKeyPress={event => (event.key === 'Enter' ? setShowEditModal(!showEditModal) : '')}
                      type="button"
                      aria-label={textEditSchedule}
                      className="ProfileEditDeleteScheduledOrder_ButtonLink"
                    >
                      {textEditSchedule}
                    </button>

                    <span> | </span>

                    <button
                      onClick={() => setShowDeleteModal(!showDeleteModal)}
                      onKeyPress={event => (event.key === 'Enter' ? setShowDeleteModal(!showDeleteModal) : '')}
                      type="button"
                      aria-label={textDeleteScheduledOrder}
                      className="ProfileEditDeleteScheduledOrder_ButtonLink"
                    >
                      {textDeleteScheduledOrder}
                    </button>
                  </div>

                  {typeof window !== 'undefined' && (
                    <Suspense fallback={null}>
                      <DeleteScheduledOrderModal
                        closeDeleteModal={closeDeleteModal}
                        showDeleteModal={showDeleteModal}
                        {...props}
                      ></DeleteScheduledOrderModal>
                    </Suspense>
                  )}
                  {typeof window !== 'undefined' && (
                    <Suspense fallback={null}>
                      <EditScheduledOrderModal
                        closeEditModal={closeEditModal}
                        showEditModal={showEditModal}
                        {...props}
                      ></EditScheduledOrderModal>
                    </Suspense>
                  )}
                </div>
              )}
            </div>
          </div>
        </div>
      )}
    </Styled>
  );
};

export default ProfileEditDeleteScheduledOrder;
