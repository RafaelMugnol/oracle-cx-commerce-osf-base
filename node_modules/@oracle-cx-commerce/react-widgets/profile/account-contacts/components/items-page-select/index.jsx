/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import Dropdown from '@oracle-cx-commerce/react-components/dropdown';
import React from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/account-contacts/components/items-page-select/styles.css';
import PropTypes from 'prop-types';

const {useCallback} = React;
const ItemsPerPageSelect = props => {
  const {
    onItemsPerPageChange,
    itemsPerPage: itemsPerPageOptions,
    selectedItemsPerPage,
    labelAriaSelectItemsPerPage
  } = props;
  const itemsPerPageChange = useCallback(
    event => {
      onItemsPerPageChange(event.target.value);
    },
    [onItemsPerPageChange]
  );

  return (
    <Styled id="ItemsPerPageSelect" css={css}>
      <Dropdown
        className={'ItemsPerPageSelect__DropDown'}
        onChange={itemsPerPageChange}
        value={selectedItemsPerPage}
        aria-label={labelAriaSelectItemsPerPage}
      >
        {itemsPerPageOptions.map(item => (
          <option key={item.value} value={item.value}>
            {item.display}
          </option>
        ))}
      </Dropdown>
    </Styled>
  );
};

ItemsPerPageSelect.propTypes = {
  /**
   * Object to populate items per page selector box
   */
  itemsPerPage: PropTypes.shape({
    /**
     * This field is used in endpoint queries for limiting the items fetched.
     */
    value: PropTypes.number.isRequired,
    /**
     * This field is used to display the options in drop down box
     */
    display: PropTypes.string.isRequired
  }).isRequired,

  /** Function to be invoked on changing items per page */
  onItemsPerPageChange: PropTypes.func.isRequired,

  /** Selected items per page */
  selectedItemsPerPage: PropTypes.number.isRequired
};

export default React.memo(ItemsPerPageSelect);
