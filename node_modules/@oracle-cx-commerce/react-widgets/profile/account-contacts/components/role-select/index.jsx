/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import Dropdown from '@oracle-cx-commerce/react-components/dropdown';
import DropdownArrowIcon from '@oracle-cx-commerce/react-components/icons/dropdown-arrow';
import React from 'react';
import SlidersIcon from '@oracle-cx-commerce/react-components/icons/sliders';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/account-contacts/components/role-select/styles.css';
import PropTypes from 'prop-types';

const {useCallback} = React;
const RoleSelect = props => {
  const {onRoleChange, roleFilter, labelAriaSelectRole, selectedRole} = props;
  const roleChange = useCallback(
    event => {
      onRoleChange(event.target.value);
    },
    [onRoleChange]
  );

  return (
    <Styled id="RoleSelect" css={css}>
      <Dropdown
        className={'RoleSelect__DropDown'}
        id="role-selector"
        onChange={roleChange}
        value={selectedRole}
        aria-label={labelAriaSelectRole}
        icon={
          <div>
            <div className="RoleSelect__SliderIconContainer">
              <SlidersIcon className="RoleSelect__SliderIcon"></SlidersIcon>
            </div>
            <div className="RoleSelect__ArrowIconContainer">
              <DropdownArrowIcon className="RoleSelect__DownArrowIcon"></DropdownArrowIcon>
            </div>
          </div>
        }
      >
        {roleFilter.map(roles => (
          <option key={roles.repositoryId} value={roles.repositoryId}>
            {roles.function && roles.function === 'custom' ? roles.name : roles.display}
          </option>
        ))}
      </Dropdown>
    </Styled>
  );
};

RoleSelect.propTypes = {
  /**
   * Selected role type
   */
  selectedRole: PropTypes.string.isRequired,

  /** Function to be invoked on selecting different role */
  onRoleChange: PropTypes.func.isRequired,

  /**
   * The roles (user roles) object from redux state(ProfileRepository->roles)
   */
  roleFilter: PropTypes.objectOf(
    PropTypes.shape({
      repositoryId: PropTypes.string.isRequired,
      function: PropTypes.string.isRequired,
      display: PropTypes.string.isRequired
    })
  ).isRequired
};

export default React.memo(RoleSelect);
