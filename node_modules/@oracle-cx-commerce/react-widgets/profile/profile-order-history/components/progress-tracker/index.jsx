/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/profile-order-history/components/progress-tracker/styles.css';
import {isEmptyObject} from '@oracle-cx-commerce/utils/generic';
import {
  INPROGRESS_COLOR,
  FULFILLED_COLOR,
  FAILED_COLOR
} from '@oracle-cx-commerce/react-widgets/profile/profile-order-history/utils';

export const ProgressTacker = props => {
  const {state} = props;
  const numberOfTicksOnProgressBar = 4;

  const statesAvailable = {
    failed: {
      color: FAILED_COLOR,
      tickPosition: 4
    },
    inProgress: {
      color: INPROGRESS_COLOR,
      tickPosition: 1
    },
    QueuedOrQuoted: {
      color: FULFILLED_COLOR,
      tickPosition: 1
    },
    approvedOrProcessing: {
      color: FULFILLED_COLOR,
      tickPosition: 2
    },
    submitted: {
      color: FULFILLED_COLOR,
      tickPosition: 3
    },
    fulfilled: {
      color: FULFILLED_COLOR,
      tickPosition: 4
    }
  };
  const statesMap = {
    AGENT_REJECTED: statesAvailable.failed,
    REJECTED_QUOTE: statesAvailable.failed,
    REJECTED: statesAvailable.failed,
    QUOTE_REQUEST_FAILED: statesAvailable.failed,
    FAILED_APPROVAL: statesAvailable.failed,
    FAILED: statesAvailable.failed,
    REMOVED: statesAvailable.failed,

    BEING_AMENDED: statesAvailable.inProgress,
    PENDING_REMOVE: statesAvailable.inProgress,
    PENDING_CUSTOMER_ACTION: statesAvailable.inProgress,
    PENDING_APPROVAL: statesAvailable.inProgress,
    PENDING_AGENT_APPROVAL: statesAvailable.inProgress,
    INCOMPLETE: statesAvailable.inProgress,
    SUSPENDED: statesAvailable.inProgress,
    PENDING_QUOTE: statesAvailable.inProgress,
    PENDING_MERCHANT_ACTION: statesAvailable.inProgress,
    PENDING_PAYMENT: statesAvailable.inProgress,

    QUEUED: statesAvailable.QueuedOrQuoted,
    QUOTED: statesAvailable.QueuedOrQuoted,

    APPROVED_TEMPLATE: statesAvailable.approvedOrProcessing,
    APPROVED: statesAvailable.approvedOrProcessing,
    PROCESSING: statesAvailable.approvedOrProcessing,

    SUBMITTED: statesAvailable.submitted,

    NO_PENDING_ACTION: statesAvailable.fulfilled,
    PENDING_CUSTOMER_RETURN: statesAvailable.fulfilled
  };

  const getStatusObject = state => {
    return state ? statesMap[state] : {};
  };

  const getStyle = state => {
    const stateRelatedData = getStatusObject(state);
    let styleObject = {};
    if (stateRelatedData) {
      const width = `${(100 / numberOfTicksOnProgressBar) * getStatusObject(state).tickPosition}%`;
      const backgroundColor = getStatusObject(state).color;
      styleObject = {
        '--cc-progress-track-width': width,
        '--cc-progress-track-color': backgroundColor.color,
        '--cc-progress-track-gradient-color': backgroundColor.gradientColor
      };
    } else {
      styleObject = {display: 'none'};
    }

    return styleObject;
  };

  const getProgressBar = state => {
    return <div style={getStyle(state)} className="ProgressTacker__Track"></div>;
  };

  return (
    <Styled id="ProgressTacker" css={css}>
      {!isEmptyObject(getStatusObject(state)) && <div className="ProgressTacker">{getProgressBar(state)}</div>}
    </Styled>
  );
};
