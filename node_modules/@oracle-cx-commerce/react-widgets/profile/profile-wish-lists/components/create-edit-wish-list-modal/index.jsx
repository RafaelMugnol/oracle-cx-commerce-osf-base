/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React, {Suspense, useContext} from 'react';

import Modal from '@oracle-cx-commerce/react-components/modal';
import {StoreContext} from '@oracle-cx-commerce/react-ui/contexts';
import Styled from '@oracle-cx-commerce/react-components/styled';
import {noop} from '@oracle-cx-commerce/utils/generic';
import PropTypes from 'prop-types';

const CreateWishListForm = React.lazy(() =>
  import('@oracle-cx-commerce/react-widgets/product/product-add-to-wishlist/components/create-wish-list-form')
);

/**
 * Provides add comments priority and quantity change action on Wish List
 * @param {*} props
 */
const CreateEditWishListModal = props => {
  const {
    setFetchingData,
    openModal = false,
    title = '',
    onCancel = noop,
    closeLinkAltText = '',
    alertWishListCreated = ''
  } = props;

  const {action} = useContext(StoreContext);

  const onAddToWishListComplete = response => {
    if (response.ok) {
      onCancel();
      setFetchingData(true);
      action('notify', {level: 'success', message: alertWishListCreated});
    }
  };

  return (
    <Styled id="CreateEditWishListModal">
      <div className="CreateEditWishListModal">
        {typeof window !== 'undefined' && (
          <Modal
            show={openModal}
            onClose={onCancel}
            closeIconTitle={closeLinkAltText}
            closeAriaLabel={closeLinkAltText}
            title={title}
          >
            <div aria-live="polite">
              <Suspense fallback={null}>
                <CreateWishListForm {...{onCancel, onAddToWishListComplete, ...props}} />
              </Suspense>
            </div>
          </Modal>
        )}
      </div>
    </Styled>
  );
};

CreateEditWishListModal.propTypes = {
  /** Callback function to be invoked to reset the value of wish lists data */
  setFetchingData: PropTypes.func,
  /** The flag to indicate whether to show the modal or not*/
  openModal: PropTypes.bool,
  /** The title of the modal in the UI */
  title: PropTypes.string,
  /** Callback function to be invoked when create/edit wish list fails */
  onCancel: PropTypes.func.isRequired
};

CreateEditWishListModal.defaultProps = {
  openModal: false,
  title: '',
  setFetchingData: undefined
};

export default CreateEditWishListModal;
