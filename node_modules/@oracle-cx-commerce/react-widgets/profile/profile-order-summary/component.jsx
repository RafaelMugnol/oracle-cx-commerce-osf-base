/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {OrderContext} from '@oracle-cx-commerce/react-ui/contexts';
import OrderSummary from '@oracle-cx-commerce/react-widgets/cart/cart-order-summary/components/order-summary';
import React, {useContext} from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/profile/profile-order-summary/styles.css';
import {getSite} from '@oracle-cx-commerce/commerce-utils/selector';
import {useSelector} from '@oracle-cx-commerce/react-components/provider';

/**
 * Widget that displays the order summary information in the Order Details Page
 */
const ProfileOrderSummary = props => {
  const {headingOrderSummary} = props;

  // order context
  const order = useContext(OrderContext);
  const {id, priceListGroup = {}, payTaxInSecondaryCurrency, payShippingInSecondaryCurrency} = order;

  // price list group for the secondary currency
  const {priceListGroupList} = useSelector(getSite);
  const secondaryCurrencyPriceListGroup = order.secondaryCurrencyCode
    ? priceListGroupList.find(priceListGroup => priceListGroup.currency.currencyCode === order.secondaryCurrencyCode)
    : null;

  // To show shipping data in secondary currency
  // If secondary currency is available, payShippingInSecondaryCurrency is set to true
  const showSecondaryShippingData = secondaryCurrencyPriceListGroup && payShippingInSecondaryCurrency;

  // To show tax data in secondary currency
  // If secondary currency is available and payTaxInSecondaryCurrency is set to true
  const showSecondaryTaxData = secondaryCurrencyPriceListGroup && payTaxInSecondaryCurrency;

  //To show price may change warning in case of scheduled orders
  const showPriceChangeMessage = order.state === 'TEMPLATE' ? true : false;

  return (
    <Styled id="ProfileOrderSummary" css={css}>
      <div className="ProfileOrderSummary">
        {id && (
          <React.Fragment>
            <h2>{headingOrderSummary}</h2>
            <OrderSummary
              order={order}
              showSecondaryShippingData={showSecondaryShippingData}
              showSecondaryTaxData={showSecondaryTaxData}
              orderPriceListGroup={priceListGroup}
              secondaryCurrencyPriceListGroup={secondaryCurrencyPriceListGroup}
              showPriceChangeMessage={showPriceChangeMessage}
              {...props}
            />
          </React.Fragment>
        )}
      </div>
    </Styled>
  );
};

export default ProfileOrderSummary;
