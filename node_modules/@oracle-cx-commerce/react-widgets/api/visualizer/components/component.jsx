/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React, {useState} from 'react';
import PropsTable from './props-table';
import StyleTable from './style-table';
import ResourceTable from './resrource-table';

const Component = props => {
  const {
    name,
    actions = [],
    Props = {},
    fetchers = [],
    resources = {},
    actionsSubCategoryMap,
    fetchersSubCategoryMap,
    styles,
    basePageURL,
    basePageURLComponentStyles
  } = props;
  const [expandedProps, setExpandedProps] = useState(false);
  const [expandedStyles, setExpandedStyles] = useState(false);
  const [expandedResources, setExpandedResources] = useState(false);

  const enResources = resources.en ? resources.en : {};

  return (
    <div className="sub-block">
      <div className="sub-details">
        <div className="schema-intro-details">
          <h2>
            Props
            <button
              type="button"
              className="mainDropdownButton"
              onClick={() => {
                setExpandedProps(!expandedProps);
              }}
            >
              <i className={`fa fa-caret-${expandedProps ? 'down' : 'right'}`}></i>
            </button>
          </h2>
          {expandedProps && (
            <table id="propsTable" className="propsTable">
              <tbody>
                <PropsTable key="propsTable" Props={Props} />
              </tbody>
            </table>
          )}
          <h2>Actions</h2>
          {actions.length ? (
            <>
              <ul>
                {actions.map(action => (
                  <li key={action}>
                    {actionsSubCategoryMap.get(action) ? (
                      <a href={`${basePageURL}#actions/${actionsSubCategoryMap.get(action)}/${action}`}>{action}</a>
                    ) : (
                      <span>{action}</span>
                    )}
                  </li>
                ))}
              </ul>
            </>
          ) : (
            ''
          )}
          <h2>Fetchers</h2>
          {fetchers.length ? (
            <>
              <ul>
                {fetchers.map(fetcher => (
                  <li key={fetcher}>
                    {fetchersSubCategoryMap.get(fetcher) ? (
                      <a href={`${basePageURL}#fetchers/${fetchersSubCategoryMap.get(fetcher)}/${fetcher}`}>
                        {fetcher}
                      </a>
                    ) : (
                      <span>{fetcher}</span>
                    )}
                  </li>
                ))}
              </ul>
            </>
          ) : (
            ''
          )}
          <h2>
            Styles
            <button
              type="button"
              className="mainDropdownButton"
              onClick={() => {
                setExpandedStyles(!expandedStyles);
              }}
            >
              <i className={`fa fa-caret-${expandedStyles ? 'down' : 'right'}`}></i>
            </button>
          </h2>
          {expandedStyles && (
            <div>
              <a href={`${basePageURL}#${basePageURLComponentStyles}${name}`}> {name}.css </a>

              <table id="styleTable" className="styleTable">
                <tbody>
                  <StyleTable key="styleTable" styles={styles} />
                </tbody>
              </table>
            </div>
          )}
          <h2>
            Resources
            <button
              type="button"
              className="mainDropdownButton"
              onClick={() => {
                setExpandedResources(!expandedResources);
              }}
            >
              <i className={`fa fa-caret-${expandedResources ? 'down' : 'right'}`}></i>
            </button>
          </h2>
          <table id="resourceTable" className="resourceTable">
            <tbody>{expandedResources && <ResourceTable key="resourceTable" enResources={enResources} />}</tbody>
          </table>
        </div>
      </div>
    </div>
  );
};
export default Component;
