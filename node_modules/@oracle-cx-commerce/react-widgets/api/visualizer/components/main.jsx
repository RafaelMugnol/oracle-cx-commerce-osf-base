/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import React from 'react';
import {t} from '@oracle-cx-commerce/utils/generic';
import Action from './action';
import Endpoint from './endpoint';
import Component from './component';
import Subscriber from './subscriber';
import Fetcher from './fetcher';
import Style from './style';
import ItemBasicDetails from './item-basic-details';

const DynamicComponentTags = {
  actions: Action,
  endpoints: Endpoint,
  components: Component,
  subscribers: Subscriber,
  fetchers: Fetcher,
  styles: Style
};

const Main = props => {
  const {
    state = {},
    textLabels,
    actionsSubCategoryMap,
    endpointsSubCategoryMap,
    fetchersSubCategoryMap,
    componentSubCategoryMap,
    version,
    currentURL,
    authorFromPackage,
    defaultAuthor,
    basePageURL,
    basePageURLComponentStyles
  } = props;

  const splitUrl = currentURL.substring(1).split('/');

  let currentPageCategory = '',
    currentPageSubCategory = '',
    currentPageItemName = '',
    styleComponentName = '',
    categoryList = {},
    DynamicComponentTagName = '';

  if (splitUrl.length > 1) {
    [currentPageCategory, currentPageSubCategory, currentPageItemName, styleComponentName] = splitUrl;
    categoryList = state[currentPageCategory][currentPageSubCategory];
    DynamicComponentTagName = DynamicComponentTags[currentPageCategory];
  }

  const {
    textEndpoints,
    textActions,
    jsApiDocumentationHeading,
    jsApiDocumentationIntroduction1,
    jsApiDocumentationIntroduction2,
    jsApiDocumentationActionsIntro,
    jsApiDocumentationEndpointsIntro
  } = textLabels;

  //Main content for home page
  if (!currentPageItemName) {
    return (
      <div className="homePage">
        <h1 className="homePage__Heading">{t(jsApiDocumentationHeading)}</h1>
        <p>{`${t(jsApiDocumentationIntroduction1)} ${t(jsApiDocumentationIntroduction2)}`}</p>
        <div className="homePage_Categories">
          <div>
            <h2 className="homePage__CategoryHeading">
              <i className="fa fa-cube"></i>
              Components
            </h2>
            <p>
              Components are building block of the page. Components take some values as input and emit HTML output based
              on them. Components refresh automatically when their input change.
            </p>
          </div>
          <div>
            <h2 className="homePage__CategoryHeading">
              <i className="fa fa-rocket"></i>
              {t(textActions)}
            </h2>
            <p> {t(jsApiDocumentationActionsIntro)} </p>
          </div>
          <div>
            <h2 className="homePage__CategoryHeading">
              <i className="fa fa-map-pin"></i>
              {t(textEndpoints)}
            </h2>
            <p>{t(jsApiDocumentationEndpointsIntro)}</p>
          </div>
        </div>
      </div>
    );
  }

  //Main content for Styles pages
  if (currentPageCategory === 'styles') {
    //handle component subsection separately as we need to fetch data from some other part of the state : metadataRepository-components
    if (currentPageItemName === 'components') {
      const componentsInfo = state.components;

      return (
        <div className="schema">
          <div className="package-details expand">
            <Style
              componentsInfo={componentsInfo}
              styleComponentName={styleComponentName}
              textLabels={textLabels}
              actionsSubCategoryMap={actionsSubCategoryMap}
              endpointsSubCategoryMap={endpointsSubCategoryMap}
              fetchersSubCategoryMap={fetchersSubCategoryMap}
              componentSubCategoryMap={componentSubCategoryMap}
              basePageURL={basePageURL}
            />
          </div>
        </div>
      );
    }

    const item = categoryList.find(item => item.name === currentPageItemName);

    return (
      <div className="schema">
        <div className="package-details expand">
          <Style
            {...item}
            textLabels={textLabels}
            actionsSubCategoryMap={actionsSubCategoryMap}
            endpointsSubCategoryMap={endpointsSubCategoryMap}
            fetchersSubCategoryMap={fetchersSubCategoryMap}
            basePageURL={basePageURL}
          />
        </div>
      </div>
    );
  }

  //Main content for everything else
  const item = categoryList.find(item => item.name === currentPageItemName);

  return (
    <div className="schema">
      <ItemBasicDetails
        {...item}
        version={version}
        authorFromPackage={authorFromPackage}
        defaultAuthor={defaultAuthor}
      />
      <div className="package-details expand">
        <DynamicComponentTagName
          {...item}
          textLabels={textLabels}
          actionsSubCategoryMap={actionsSubCategoryMap}
          endpointsSubCategoryMap={endpointsSubCategoryMap}
          fetchersSubCategoryMap={fetchersSubCategoryMap}
          basePageURL={basePageURL}
          basePageURLComponentStyles={basePageURLComponentStyles}
        />
      </div>
    </div>
  );
};

export default Main;
