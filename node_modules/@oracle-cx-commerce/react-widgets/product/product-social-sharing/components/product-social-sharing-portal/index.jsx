/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {ProductContext, StoreContext} from '@oracle-cx-commerce/react-ui/contexts';
/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React, {useContext} from 'react';
import {getBaseURL, t} from '@oracle-cx-commerce/utils/generic';

import EmailIcon from '@oracle-cx-commerce/react-components/icons/email';
import FacebookIcon from '@oracle-cx-commerce/react-components/icons/facebook';
import PinterestIcon from '@oracle-cx-commerce/react-components/icons/pinterest';
import Styled from '@oracle-cx-commerce/react-components/styled';
import TwitterIcon from '@oracle-cx-commerce/react-components/icons/twitter';
import css from '@oracle-cx-commerce/react-widgets/product/product-social-sharing/components/product-social-sharing-portal/styles.css';
import {getProductionFacebook} from '@oracle-cx-commerce/commerce-utils/selector';
import PropTypes from 'prop-types';

// configurable
const PINTEREST_WIN_TITLE = 'pinterestWindow';
const TWITTER_WIN_TITLE = 'twitterWindow';
const FACEBOOK_WIN_TITLE = 'facebookWin';
const SHARING_WINDOW_WIDTH = '720';
const SHARING_WINDOW_HEIGHT = '500';

const ProductSocialSharingPortal = props => {
  const {displayName: productName = '', primaryLargeImageURL = '', route} = useContext(ProductContext);
  const {getState} = useContext(StoreContext);
  const {applicationId: facebookAppId = ''} = getProductionFacebook(getState());

  const {
    // Facebook
    labelFacebook = 'Facebook',
    displayFacebook = true,
    actionShareOnFacebook,
    facebookURL,
    // Pinterest
    labelPinterest = 'Pinterest',
    displayPinterest = true,
    actionShareOnPinterest,
    pinterestURL,
    textPinterestShare,
    // Twitter
    labelTwitter = 'Twitter',
    displayTwitter = true,
    actionShareOnTwitter,
    twitterURL,
    textTwitterShare,
    // Email
    labelEmail = 'Email',
    displayEmail = true,
    actionShareByEmail,
    textEmailSubject,
    textEmailBody
  } = props;

  // const [showShareOptions, setShowShareOptions] = useState(false);
  const twitterTextEncoded = encodeURIComponent(textTwitterShare);
  const pinterestTextEncoded = encodeURIComponent(textPinterestShare);
  const SHARING_WINDOW_PROPS = `width=${SHARING_WINDOW_WIDTH}, height=${SHARING_WINDOW_HEIGHT}`;

  // helpers

  /**
   * Returns absolute product URL
   */
  const getProductURL = () => {
    return `${getBaseURL({window})}/${route}` || '';
  };

  /**
   * Returns encoded absolute product URL
   */
  const getProductURLEncoded = () => {
    return encodeURIComponent(getProductURL());
  };

  /**
   * Handler to share product on Pinterest
   */
  const shareOnPinterest = () => {
    const productMediaEncoded = encodeURIComponent(`${getBaseURL({window})}${primaryLargeImageURL}`);
    const pinterestText = t(pinterestTextEncoded, {productName});
    const pinterestWin = window.open(
      t(pinterestURL, {
        productURL: getProductURLEncoded(),
        textPinterestShare: pinterestText,
        productImage: productMediaEncoded
      }),
      PINTEREST_WIN_TITLE,
      SHARING_WINDOW_PROPS
    );

    if (pinterestWin) {
      pinterestWin.focus();
    }
  };

  /**
   * Handler to share product on Twitter
   */
  const shareOnTwitter = () => {
    const twitterText = t(twitterTextEncoded, {productName});
    const twitterWin = window.open(
      t(twitterURL, {textTwitterShare: twitterText, productURL: getProductURLEncoded()}),
      TWITTER_WIN_TITLE,
      SHARING_WINDOW_PROPS
    );

    if (twitterWin) {
      twitterWin.focus();
    }
  };

  /**
   * Handler to share product on Facebook
   */
  const shareOnFacebook = () => {
    const facebookWin = window.open(
      t(facebookURL, {facebookAppId, productURL: getProductURLEncoded()}),
      FACEBOOK_WIN_TITLE,
      SHARING_WINDOW_PROPS
    );
    if (facebookWin) {
      facebookWin.focus();
    }
  };

  /**
   * Handler to share product by email
   */
  const shareByEmail = () => {
    const subjectText = t(textEmailSubject, {productName}) || '';
    const bodyText = `${t(textEmailBody, {productName}) || ''} \n\n ${getProductURL()}`;
    window.location.href = `mailto:?subject=${encodeURIComponent(subjectText)}&body=${encodeURIComponent(bodyText)}`;
  };

  /**
   * Generic Handler to share a product on social media.
   *
   * @param {object} props
   */
  const ProductShare = props => {
    const {classes = '', onClick, title, label, children} = props;

    return (
      <button className={classes} onClick={onClick} type="button" aria-label={title} title={title}>
        {children}
        <span>{label}</span>
      </button>
    );
  };

  return (
    <Styled id="ProductSocialSharingPortal" css={css}>
      <div className="ProductSocialSharingPortal__Main">
        <div className="ProductSocialSharingPortal__Icons">
          {displayFacebook && (
            <ProductShare
              classes="ProductSocialSharing__Icon ProductSocialSharing__FacebookIcon"
              onClick={shareOnFacebook}
              title={actionShareOnFacebook}
              label={labelFacebook}
            >
              <FacebookIcon />
            </ProductShare>
          )}
          {displayPinterest && (
            <ProductShare
              classes="ProductSocialSharing__Icon ProductSocialSharing__PinterestIcon"
              onClick={shareOnPinterest}
              title={actionShareOnPinterest}
              label={labelPinterest}
            >
              <PinterestIcon />
            </ProductShare>
          )}
          {displayTwitter && (
            <ProductShare
              classes="ProductSocialSharing__Icon ProductSocialSharing__TwitterIcon"
              onClick={shareOnTwitter}
              title={actionShareOnTwitter}
              label={labelTwitter}
            >
              <TwitterIcon />
            </ProductShare>
          )}
          {displayEmail && (
            <ProductShare
              classes="ProductSocialSharing__Icon ProductSocialSharing__EmailIcon"
              onClick={shareByEmail}
              title={actionShareByEmail}
              label={labelEmail}
            >
              <EmailIcon />
            </ProductShare>
          )}
        </div>
      </div>
    </Styled>
  );
};

ProductSocialSharingPortal.propTypes = {
  /*
   * Boolean to display email sharing.
   */
  displayEmail: PropTypes.bool,
  /*
   * Boolean to display Facebook sharing.
   */
  displayFacebook: PropTypes.bool,
  /*
   * Boolean to display Pinterest sharing.
   */
  displayPinterest: PropTypes.bool,
  /*
   * Boolean to display Twitter sharing.
   */
  displayTwitter: PropTypes.bool,
  /*
   * Facebook URL to share.
   */
  facebookURL: PropTypes.string,
  /*
   * Pinterest URL to share.
   */
  pinterestURL: PropTypes.string,
  /*
   * Twitter URL to share.
   */
  twitterURL: PropTypes.string
};

ProductSocialSharingPortal.defaultProps = {
  displayEmail: true,
  displayFacebook: true,
  displayPinterest: true,
  displayTwitter: true,
  facebookURL: undefined,
  pinterestURL: undefined,
  twitterURL: undefined
};

export default ProductSocialSharingPortal;
