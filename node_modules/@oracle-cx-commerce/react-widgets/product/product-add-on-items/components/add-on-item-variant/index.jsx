/*
 ** Copyright (c) 2021 Oracle and/or its affiliates.
 */

import React, {useContext, useCallback} from 'react';
import Radio from '@oracle-cx-commerce/react-components/radio';
import ProductPrice from '@oracle-cx-commerce/react-widgets/product/product-price/component';
import {ContainerContext, ProductContext} from '@oracle-cx-commerce/react-ui/contexts';
import {noop} from '@oracle-cx-commerce/utils/generic';
import PropTypes from 'prop-types';

/**
 * Renders the variants associated with the Add-On Product.
 */
const AddOnItemVariant = props => {
  const {addOnOption = {}, addOnItemDetails = {}} = props;
  const {selections = {}, setSelections} = useContext(ContainerContext);
  const {childItems = []} = selections;

  /**
   * Selects the Add-On Product Variant
   * @param {Object} selection the selection value object
   */
  const selectAddOnVariant = useCallback(
    (event, skuId) => {
      if (event.target.checked) {
        //Update the Sku of the Add-On product.
        const addOnsWithUpdatedVariant = childItems.map(selectedAddOn =>
          selectedAddOn.productId === addOnItemDetails.id ? {...selectedAddOn, catRefId: skuId} : selectedAddOn
        );
        setSelections(prevState => {
          return {
            ...prevState,
            childItems: [...addOnsWithUpdatedVariant]
          };
        });
      }
    },
    [addOnItemDetails.id, childItems, setSelections]
  );

  return (
    <div>
      <Radio
        id={addOnOption.sku.repositoryId}
        name={addOnOption.product.repositoryId}
        data-testid={addOnOption.sku.repositoryId}
        required={false}
        onClick={noop}
        onChange={event => {
          selectAddOnVariant(event, addOnOption.sku.repositoryId);
        }}
        labelText={
          <span>
            {`${addOnOption.sku.displayName} /`}{' '}
            <ProductContext.Provider value={addOnItemDetails}>
              <ContainerContext.Provider
                value={{selections: {skuId: addOnOption.sku.repositoryId}, setSelections: noop}}
              >
                <span className="ProductItem__Price">
                  <ProductPrice {...props} />
                </span>
              </ContainerContext.Provider>
            </ProductContext.Provider>
          </span>
        }
      />
    </div>
  );
};

AddOnItemVariant.propTypes = {
  /**
   * Add-On option, which contains Add-On Sku Details.
   */
  addOnOption: PropTypes.object.isRequired,

  /**
   * Current Add-On Item product details.
   */
  addOnItemDetails: PropTypes.object.isRequired
};

export default React.memo(AddOnItemVariant);
