/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {getLocationBasedInventory} from '@oracle-cx-commerce/commerce-utils/selector';
import {useDateFormatter} from '@oracle-cx-commerce/react-components/utils/hooks';
import {useSelector} from '@oracle-cx-commerce/react-components/provider';
import {ContainerContext} from '@oracle-cx-commerce/react-ui/contexts';
import {useContext} from 'react';

/**
 * Returns data required by the component by invoking selectors
 *
 * @param  {String} widgetId Widget Id
 * @return {Object} Object
 */
export const useComponentData = () => {
  // selectors
  const {selections: {skuId = null, selectedStore = {}, isPickupInStoreOptionSelected = false} = {}} =
    useContext(ContainerContext);

  const locationId = isPickupInStoreOptionSelected && selectedStore.locationId ? selectedStore.locationId : '';
  const {stockStatus, availabilityDate, orderableQuantity} = useSelector(getLocationBasedInventory, {
    skuId,
    locationId
  });

  const formatDate = useDateFormatter();
  let formattedAvailabilityDate = null;
  if (availabilityDate) {
    try {
      formattedAvailabilityDate = formatDate(new Date(availabilityDate));
    } catch (error) {
      console.error(error);
    }
  }

  return {
    availabilityDate: formattedAvailabilityDate,
    stockStatus,
    selectedStore,
    isPickupInStoreOptionSelected,
    orderableQuantity
  };
};
