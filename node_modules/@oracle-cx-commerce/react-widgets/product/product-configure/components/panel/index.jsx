/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React from 'react';
import {Tab, TabContainer} from '@oracle-cx-commerce/react-components/tabs';
import Styled from '@oracle-cx-commerce/react-components/styled';
import PanelRow from '@oracle-cx-commerce/react-widgets/product/product-configure/components/panel-row';
import css from '@oracle-cx-commerce/react-widgets/product/product-configure/components/panel/styles.css';
import PropTypes from 'prop-types';

/**
 * This component will render a panel UI component.
 *
 * @param {Object} props.component
 *   The component to be processed. This will be passed from the parent component.
 */
const Panel = ({component}) => {
  const {
    components: {items: panelChildComponentItems},
    columnWidthsList
  } = component;

  return (
    <Styled id="ConfiguratorPanel" css={css}>
      <div className="ConfiguratorPanel">
        {panelChildComponentItems &&
          panelChildComponentItems[0] &&
          panelChildComponentItems[0].componentTypeCode &&
          panelChildComponentItems[0].componentTypeCode.lookupCode === 'PANEL_TAB' && (
            <TabContainer id={`tab${component.id}`}>
              {panelChildComponentItems.map(component => {
                return (
                  <Tab key={component.id} id={component.id} header={component.title}>
                    {component.components &&
                      component.components.items &&
                      component.components.items.map(item => {
                        if (item.componentTypeCode && item.componentTypeCode.lookupCode === 'PANEL') {
                          return <Panel key={item.id} component={item} />;
                        }

                        return null;
                      })}
                  </Tab>
                );
              })}
            </TabContainer>
          )}

        {panelChildComponentItems[0] &&
          panelChildComponentItems[0].componentTypeCode &&
          panelChildComponentItems[0].componentTypeCode.lookupCode !== 'PANEL_TAB' &&
          panelChildComponentItems.map(item => {
            if (item.componentTypeCode && item.componentTypeCode.lookupCode === 'PANEL') {
              return <Panel key={item.id} component={item} />;
            }
            if (item.componentTypeCode && item.componentTypeCode.lookupCode === 'PANEL_ROW') {
              return <PanelRow key={item.id} component={item} columnWidths={columnWidthsList} />;
            }

            return null;
          })}
      </div>
    </Styled>
  );
};

Panel.propTypes = {
  /**
   * The component to be processed. This will be passed from the parent component.
   */
  component: PropTypes.shape({
    components: PropTypes.shape({
      items: PropTypes.arrayOf(Object)
    })
  }).isRequired
};

export {Panel};
