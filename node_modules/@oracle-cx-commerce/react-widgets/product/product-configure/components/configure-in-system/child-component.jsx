/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React from 'react';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/product/product-configure/components/configure-in-system/styles.css';
import PropTypes from 'prop-types';
import {noop} from '@oracle-cx-commerce/utils/generic';

/**
 * This component will render all child items for a system configuration.
 *
 * @param {Object} props.items
 *  The configData object from the configurations repository store.
 * @param {Object} props.handler
 *  Click handler for system configuration navigation items.
 */
const ConfigureInSystemChildren = ({items = [], handler = noop}) => {
  return (
    <Styled id="ConfigureInSystemChildren" css={css}>
      {items.map(childItem => (
        <ul key={`${childItem.path}-${childItem.name}`} className="ConfigureInSystem__Child">
          <li>
            {childItem.isModel && (
              <button
                type="button"
                onClick={() => {
                  handler(childItem.productFamily, childItem.productLine, childItem.model, childItem.path);
                }}
                className={`secondary ${childItem.isActive ? 'active' : ''}`}
              >
                {childItem.name}
              </button>
            )}
            {!childItem.isModel && <span key={childItem.name}>{childItem.name}</span>}
          </li>
          {childItem.items && childItem.items.length > 0 && (
            <ConfigureInSystemChildren items={childItem.items} handler={handler} />
          )}
        </ul>
      ))}
    </Styled>
  );
};

ConfigureInSystemChildren.propTypes = {
  /** The children items. */
  items: PropTypes.arrayOf(
    PropTypes.shape({
      path: PropTypes.string,
      name: PropTypes.string,
      isModel: PropTypes.bool,
      productFamily: PropTypes.string,
      productLine: PropTypes.string,
      model: PropTypes.string,
      items: PropTypes.array
    })
  ),
  /** The onclick handler. */
  handler: PropTypes.func
};

ConfigureInSystemChildren.defaultProps = {
  items: [],
  handler: noop
};

export default ConfigureInSystemChildren;
