/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */
import React from 'react';
import {getConfiguration} from '@oracle-cx-commerce/commerce-utils/selector';
import {connect} from '@oracle-cx-commerce/react-components/provider';
import {useNumberFormatter} from '@oracle-cx-commerce/react-components/utils/hooks';
import Styled from '@oracle-cx-commerce/react-components/styled';
import css from '@oracle-cx-commerce/react-widgets/product/product-configure/components/price-info/styles.css';
import PropTypes from 'prop-types';

const OPTIONS = {style: 'currency'};

/**
 * This component will render all available configuration price information.
 *
 * @param {Object} props.configData
 *  The configData object from the configurations repository store.
 */
const PriceInfo = ({configData}) => {
  // Format the price to the current site/priceListGroup currency.
  const formatPrice = useNumberFormatter(OPTIONS);

  return (
    <Styled id="ConfiguratorPriceInfo" css={css}>
      <ul className="ConfiguratorPriceInfo__List">
        {configData &&
          configData._priceInfo &&
          configData._priceInfo.items &&
          configData._priceInfo.items.map(item => {
            return (
              item._others &&
              item._others.map(priceInfo => {
                return (
                  <li className="ConfiguratorPriceInfo__Item" key={priceInfo.variableName}>
                    <div className="ConfiguratorPriceInfo__ItemName">{priceInfo.name}</div>
                    <div className="ConfiguratorPriceInfo__ItemPrice">
                      {priceInfo.price && formatPrice(priceInfo.price['value'])}
                    </div>
                  </li>
                );
              })
            );
          })}
      </ul>
    </Styled>
  );
};

PriceInfo.propTypes = {
  /** The configData object from the configurations repository store. */
  configData: PropTypes.instanceOf(Object).isRequired
};

export default connect(getConfiguration)(PriceInfo);
