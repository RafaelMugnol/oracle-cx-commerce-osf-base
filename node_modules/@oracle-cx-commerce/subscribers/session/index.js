/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {getSessionContext} from '@oracle-cx-commerce/commerce-utils/selector';

/*
  Set an 'access_token' cookie with a given Max-Age. Max-Age=0 will expire the cookie immediately, so is equivalent to deleting it.
*/
function setAccessTokenCookie(value = '', maxAge = 0) {
  document.cookie = `access_token=${value};Max-Age=${maxAge};SameSite=Strict;path=/`;
}

/*
  Set an 'currentOrganization' cookie with a given Max-Age. Max-Age=0 will expire the cookie immediately, so is equivalent to deleting it.
*/
function setCurrentOrganization(value = '', maxAge = 0) {
  document.cookie = `currentOrganization=${value};Max-Age=${maxAge};SameSite=Strict;path=/`;
}

/*
  Add/update 'access_token' cookie on (loginResolved|ssoLoginResolved|refreshResolved).
  
  Remove 'access_token' cookie on (logout).
*/
export default ({subscribeDispatch}) => {
  return subscribeDispatch((action, state) => {
    const {type} = action;

    const {token, tokenExpires} = getSessionContext(state);

    if (type === 'loginResolved' || type === 'ssoLoginResolved' || type === 'refreshResolved') {
      // Set cookie - if a token exists the cookie is created, otherwise the cookie is deleted
      setAccessTokenCookie(token, tokenExpires);
    } else if (type === 'logout') {
      if (document.cookie.includes('currentOrganization')) {
        setCurrentOrganization();
      }
      if (document.cookie.includes('access_token')) {
        // Delete cookie
        setAccessTokenCookie();
      }
    }
  });
};
