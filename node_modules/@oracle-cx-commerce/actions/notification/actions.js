/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {combineReducers, createReducer} from '@oracle-cx-commerce/store/utils';

/*
 * Generate a unique id.
 */
// TODO needs to be more robust.
const uuid = () => Date.now();

/*
 * Add a notification.
 */
const notify = (state, action) => {
  const {level, message} = action.payload || {};
  const id = uuid();

  console.assert(
    level === 'success' || level === 'error' || level === 'warn' || level === 'info',
    'Invalid notification level--must be "success", "error", "warn" or "info".'
  );
  console.assert(
    typeof message === 'string' && message.length > 0,
    'Missing notification message--must be a non empty string.'
  );

  return {
    [id]: {
      level,
      message
    },
    ...state
  };
};

/*
 * Remove a notification (by id).
 */
const notifyClear = (state, action) => {
  const {id} = action.payload || {};
  const {[id]: notification, ...rest} = state;

  return {...rest};
};

/*
  Remove all notifications.
 */
const notifyClearAll = () => ({});

export default {
  reducer: combineReducers({
    clientRepository: combineReducers({
      notifications: createReducer({
        notify,
        notifyClear,
        notifyClearAll
      })
    })
  })
};
