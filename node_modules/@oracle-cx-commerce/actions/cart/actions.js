/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

import {endpointSaga, takeLatest, takeLeading, combineReducers, createReducer} from '@oracle-cx-commerce/store/utils';
import {all, put} from 'redux-saga/effects';

const DELETE_CART_SUCCESS = 'deleteCartSuccess';
const deleteCartReducer = (state, {payload = {}}) => {
  const {orderId = null} = payload;
  const {orders} = state;
  delete orders[orderId];

  return {orders};
};

function* deleteCartSaga(action) {
  const response = yield endpointSaga(action);

  if (response.ok === true) {
    yield put({...action, type: DELETE_CART_SUCCESS});
  }

  return response;
}

export default {
  reducer: combineReducers({
    orderRepository: createReducer({[DELETE_CART_SUCCESS]: deleteCartReducer})
  }),
  *saga() {
    yield all([
      takeLatest('applyCouponsToCart', endpointSaga),
      takeLatest('getCart', endpointSaga),
      takeLatest('priceCart', endpointSaga),
      takeLatest('removeCouponsFromCart', endpointSaga),
      takeLatest('getUpsellMessages', endpointSaga),
      takeLeading('updateCart', endpointSaga),
      takeLeading('checkoutCart', endpointSaga),
      takeLeading('listShippingMethodsForCart', endpointSaga),
      takeLeading('switchCart', endpointSaga),
      takeLeading('saveCart', endpointSaga),
      takeLatest('listCarts', endpointSaga),
      takeLeading('deleteCart', deleteCartSaga)
    ]);
  }
};
