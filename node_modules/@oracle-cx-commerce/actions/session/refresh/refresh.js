/*
 ** Copyright (c) 2022 Oracle and/or its affiliates.
 */

import {combineReducers, createReducer, endpointSaga, takeLeading} from '@oracle-cx-commerce/store/utils';
import {
  expireOrderReducer,
  expireProfileReducer,
  expirePurchaseListReducer,
  expireReturnReducer,
  unauthorizedReducer
} from '@oracle-cx-commerce/actions/session/actions';

const UNAUTHORIZED = '401';

export default {
  reducer: combineReducers({
    orderRepository: createReducer({
      [UNAUTHORIZED]: expireOrderReducer
    }),
    profileRepository: createReducer({
      [UNAUTHORIZED]: expireProfileReducer
    }),
    purchaseListRepository: createReducer({
      [UNAUTHORIZED]: expirePurchaseListReducer
    }),
    clientRepository: combineReducers({
      context: combineReducers({
        session: createReducer({
          [UNAUTHORIZED]: unauthorizedReducer
        })
      })
    }),
    csrRepository: createReducer({
      [UNAUTHORIZED]: expireReturnReducer
    })
  }),

  *saga() {
    yield takeLeading('refresh', endpointSaga);
  }
};
