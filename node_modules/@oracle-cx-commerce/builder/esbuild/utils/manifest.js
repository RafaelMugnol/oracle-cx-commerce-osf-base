/*
 ** Copyright (c) 2021 Oracle and/or its affiliates.
 */

function createManifest(metafile, options) {
  const manifest = {
    // A mapping of entry chunk names to file name.
    imports: options.entryPoints.reduce((result, entryPoint) => Object.assign(result, {[entryPoint]: {}}), {}),
    // A mapping of entry chunk file name to dependency list [file names].
    preloads: {}
  };

  // Loop through all the chunks to detect entries.
  for (const [originalFileName, outputInfo] of Object.entries(metafile.outputs)) {
    const fileName = originalFileName.replace('dist/', '');

    if (manifest.imports[outputInfo.entryPoint]) {
      manifest.imports[outputInfo.entryPoint] = fileName;
    }

    if (outputInfo.entryPoint) {
      // TODO - more efficient
      manifest.preloads[fileName] = outputInfo.imports
        .filter(importInfo => importInfo.kind === 'import-statement')
        .map(importInfo => importInfo.path.replace('dist/', ''));
    }
  }

  return manifest;
}

module.exports = {createManifest};
