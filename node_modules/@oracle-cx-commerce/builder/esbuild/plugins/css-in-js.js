/*
 ** Copyright (c) 2021 Oracle and/or its affiliates.
 */

const esbuild = require('esbuild');
const externalize = require('./externalize');

const buildCssPlugins = [externalize()];

async function buildCss(file, options) {
  const {minify = false, format, metafile, bundle = true, loader = {}} = options;

  const result = await esbuild.build({
    entryPoints: [file],
    sourcemap: false,
    bundle,
    write: false,
    outdir: 'out',
    minify,
    format,
    metafile,
    loader,
    plugins: buildCssPlugins
  });

  return result.outputFiles[result.outputFiles.length - 1];
}

module.exports = options => ({
  name: 'occ-css-in-js',

  setup(build) {
    let cache;

    build.onStart(() => {
      cache = new Map();
    });

    build.onLoad({filter: /\.css$/}, async args => {
      if (!cache.has(args.path)) {
        const result = await buildCss(args.path, {...build.initialOptions, ...options});

        cache.set(args.path, result.text);
      }

      const cssText = cache.get(args.path);

      return {
        contents: `export default ${JSON.stringify(cssText)};`,
        loader: 'js',
        watchFiles: [args.path]
      };
    });
  }
});
