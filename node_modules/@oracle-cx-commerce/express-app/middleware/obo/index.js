/*
 ** Copyright (c) 2020 Oracle and/or its affiliates.
 */

const isObo = req => {
  const reqData = req.body;
  if (reqData) {
    const oboAccessToken = reqData['cc-shopper-behalf-token'];
    const oboRedirectUrl = reqData['cc-shopper-agent-redirect-url'];
    if (oboAccessToken && oboRedirectUrl) {
      return true;
    }
  }

  return false;
};

const createOboSessionState = req => {
  const reqData = req.body;
  const oboAccessToken = reqData['cc-shopper-behalf-token'];
  const oboRedirectUrl = reqData['cc-shopper-agent-redirect-url'];
  const oboPriceListGroup = reqData['cc-shopper-priceListGroupId-value'];
  const oboCurrentOrganization = reqData['cc-shopper-organizationId-value'];
  const additionalState = {
    clientRepository: {
      context: {
        session: {token: oboAccessToken, redirectUrl: oboRedirectUrl},
        global: {priceListGroup: oboPriceListGroup}
      }
    }
  };

  if (oboCurrentOrganization) {
    additionalState.clientRepository.context.global.currentOrganization = oboCurrentOrganization;
  }

  return additionalState;
};

const populateHeaderData = (req, res) => {
  const reqData = req.body;
  const oboAccessToken = reqData['cc-shopper-behalf-token'];
  res.locals.Authorization = `Bearer ${oboAccessToken}`;

  // Set raw header (for use by `http-proxy-middleware` forwarding to occ app server ONLY)
  req.headers.Authorization = `Bearer ${oboAccessToken}`;

  // Set token cookie -- so the browser has access to the sut token
  res.cookie('access_token', oboAccessToken, {sameSite: true, maxAge: 2000});
};

module.exports = () => {
  return {
    /*
      The agent OBO flow is parsed to hold the details of the shopper (OBO whom the agent is browsing)
    */
    obo(req, res, next) {
      if (isObo(req)) {
        // Ensure `additionalState` is an array
        if (!Array.isArray(res.locals.additionalState)) {
          res.locals.additionalState = [];
        }

        const oboSessionState = createOboSessionState(req);

        res.locals.additionalState.push(oboSessionState);

        populateHeaderData(req, res);
      }

      next();
    }
  };
};
